%% 
%% Search data file for diameter 1.12.2
%% generated March 14, 2017
%% 
{"diameter.html", {function, {"diameter", "diameter"}},
[
  {"add_transport", "add_transport(SvcName, {connect|listen, [Opt]})", "add_transport-2"},
  {"call", "call(SvcName, App, Request, [Opt])", "call-4"},
  {"origin_state_id", "origin_state_id()", "origin_state_id-0"},
  {"remove_transport", "remove_transport(SvcName, Pred)", "remove_transport-2"},
  {"service_info", "service_info(SvcName, Info)", "service_info-2"},
  {"services", "services()", "services-0"},
  {"session_id", "session_id(Ident)", "session_id-1"},
  {"start", "start()", "start-0"},
  {"start_service", "start_service(SvcName, Options)", "start_service-2"},
  {"stop", "stop()", "stop-0"},
  {"stop_service", "stop_service(SvcName)", "stop_service-1"},
  {"subscribe", "subscribe(SvcName)", "subscribe-1"},
  {"unsubscribe", "unsubscribe(SvcName)", "unsubscribe-1"}
]}.
{"diameter.html", {module, "diameter"}, ["diameter"]}.
{"diameterc.html", {command, "diameter"}, ["diameterc"]}.
{"diameter_app.html", {function, {"diameter", "diameter_app"}},
[
  {"Mod:peer_up", "Mod:peer_up(SvcName, Peer, State)", "Mod:peer_up-3"},
  {"Mod:peer_down", "Mod:peer_down(SvcName, Peer, State)", "Mod:peer_down-3"},
  {"Mod:pick_peer", "Mod:pick_peer(LocalCandidates, RemoteCandidates, SvcName, State)", "Mod:pick_peer-4"},
  {"Mod:prepare_request", "Mod:prepare_request(Packet, SvcName, Peer)", "Mod:prepare_request-3"},
  {"Mod:prepare_retransmit", "Mod:prepare_retransmit(Packet, SvcName, Peer)", "Mod:prepare_retransmit-3"},
  {"Mod:handle_answer", "Mod:handle_answer(Packet, Request, SvcName, Peer)", "Mod:handle_answer-4"},
  {"Mod:handle_error", "Mod:handle_error(Reason, Request, SvcName, Peer)", "Mod:handle_error-4"},
  {"Mod:handle_request", "Mod:handle_request(Packet, SvcName, Peer)", "Mod:handle_request-3"}
]}.
{"diameter_app.html", {module, "diameter"}, ["diameter_app"]}.
{"diameter_codec.html", {function, {"diameter", "diameter_codec"}},
[
  {"decode", "decode(Mod, Bin)", "decode-2"},
  {"encode", "encode(Mod, Msg)", "encode-2"}
]}.
{"diameter_codec.html", {module, "diameter"}, ["diameter_codec"]}.
{"diameter_dict.html", {file, "diameter"}, ["diameter_dict"]}.
{"diameter_make.html", {function, {"diameter", "diameter_make"}},
[
  {"codec", "codec(File :: iolist() | binary(), [Opt])", "codec-2"},
  {"format", "format(Parsed)", "format-1"},
  {"flatten", "flatten(Parsed)", "flatten-1"},
  {"format_error", "format_error(Reason)", "format_error-1"}
]}.
{"diameter_make.html", {module, "diameter"}, ["diameter_make"]}.
{"diameter_transport.html", {function, {"diameter", "diameter_transport"}},
[
  {"Mod:start", "Mod:start({Type, Ref}, Svc, Config)", "Mod:start-3"}
]}.
{"diameter_transport.html", {module, "diameter"}, ["diameter_transport"]}.
{"diameter_tcp.html", {function, {"diameter", "diameter_tcp"}},
[
  {"start", "start({Type, Ref}, Svc, [Opt])", "start-3"}
]}.
{"diameter_tcp.html", {module, "diameter"}, ["diameter_tcp"]}.
{"diameter_sctp.html", {function, {"diameter", "diameter_sctp"}},
[
  {"start", "start({Type, Ref}, Svc, [Opt])", "start-3"}
]}.
{"diameter_sctp.html", {module, "diameter"}, ["diameter_sctp"]}.
{notused, application, ["diameter"]}.
