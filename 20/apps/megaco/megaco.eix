%% 
%% Search data file for megaco 3.18.3
%% generated March 13, 2018
%% 
{"megaco.html", {function, {"megaco", "megaco"}},
[
  {"start", "start()", "start-0"},
  {"stop", "stop()", "stop-0"},
  {"start_user", "start_user(UserMid, Config)", "start_user-2"},
  {"stop_user", "stop_user(UserMid)", "stop_user-1"},
  {"user_info", "user_info(UserMid)", "user_info-1"},
  {"user_info", "user_info(UserMid, Item)", "user_info-2"},
  {"update_user_info", "update_user_info(UserMid, Item, Value)", "update_user_info-3"},
  {"conn_info", "conn_info(ConnHandle)", "conn_info-1"},
  {"conn_info", "conn_info(ConnHandle, Item)", "conn_info-2"},
  {"update_conn_info", "update_conn_info(ConnHandle, Item, Value)", "update_conn_info-3"},
  {"system_info", "system_info()", "system_info-0"},
  {"system_info", "system_info(Item)", "system_info-1"},
  {"info", "info()", "info-0"},
  {"connect", "connect(ReceiveHandle, RemoteMid, SendHandle, ControlPid)", "connect-4"},
  {"connect", "connect(ReceiveHandle, RemoteMid, SendHandle, ControlPid, Extra)", "connect-5"},
  {"disconnect", "disconnect(ConnHandle, DiscoReason)", "disconnect-2"},
  {"call", "call(ConnHandle, Actions, Options)", "call-3"},
  {"cast", "cast(ConnHandle, Actions, Options)", "cast-3"},
  {"encode_actions", "encode_actions(ConnHandle, Actions, Options)", "encode_actions-3"},
  {"token_tag2string", "token_tag2string(Tag)", "token_tag2string-1"},
  {"token_tag2string", "token_tag2string(Tag, EncoderMod)", "token_tag2string-2"},
  {"token_tag2string", "token_tag2string(Tag, EncoderMod, Version)", "token_tag2string-3"},
  {"cancel", "cancel(ConnHandle, CancelReason)", "cancel-2"},
  {"process_received_message", "process_received_message(ReceiveHandle, ControlPid, SendHandle, BinMsg)", "process_received_message-4"},
  {"process_received_message", "process_received_message(ReceiveHandle, ControlPid, SendHandle, BinMsg, Extra)", "process_received_message-5"},
  {"receive_message", "receive_message(ReceiveHandle, ControlPid, SendHandle, BinMsg)", "receive_message-4"},
  {"receive_message", "receive_message(ReceiveHandle, ControlPid, SendHandle, BinMsg, Extra)", "receive_message-5"},
  {"parse_digit_map", "parse_digit_map(DigitMapBody)", "parse_digit_map-1"},
  {"eval_digit_map", "eval_digit_map(DigitMap)", "eval_digit_map-1"},
  {"eval_digit_map", "eval_digit_map(DigitMap, Timers)", "eval_digit_map-2"},
  {"report_digit_event", "report_digit_event(DigitMapEvalPid, Events)", "report_digit_event-2"},
  {"test_digit_event", "test_digit_event(DigitMap, Events)", "test_digit_event-2"},
  {"encode_sdp", "encode_sdp(SDP)", "encode_sdp-1"},
  {"decode_sdp", "decode_sdp(PP)", "decode_sdp-1"},
  {"get_sdp_record_from_PropertGroup", "get_sdp_record_from_PropertGroup(Type, PG)", "get_sdp_record_from_PropertGroup-2"},
  {"versions1", "versions1()", "versions1-0"},
  {"versions2", "versions2()", "versions2-0"},
  {"print_version_info", "print_version_info()", "print_version_info-0"},
  {"print_version_info", "print_version_info(VersionInfo)", "print_version_info-1"},
  {"enable_trace", "enable_trace(Level, Destination)", "enable_trace-2"},
  {"disable_trace", "disable_trace()", "disable_trace-0"},
  {"set_trace", "set_trace(Level)", "set_trace-1"},
  {"get_stats", "get_stats()", "get_stats-0"},
  {"get_stats", "get_stats(GlobalCounter)", "get_stats-1"},
  {"get_stats", "get_stats(ConnHandle)", "get_stats-1"},
  {"get_stats", "get_stats(ConnHandle, Counter)", "get_stats-2"},
  {"reset_stats", "reset_stats()", "reset_stats-0"},
  {"reset_stats", "reset_stats(ConnHandle)", "reset_stats-1"},
  {"test_request", "test_request(ConnHandle, Version, EncodingMod, EncodingConfig, Actions)", "test_request-5"},
  {"test_reply", "test_reply(ConnHandle, Version, EncodingMod, EncodingConfig, Reply)", "test_reply-5"}
]}.
{"megaco.html", {module, "megaco"}, ["megaco"]}.
{"megaco_edist_compress.html", {function, {"megaco", "megaco_edist_compress"}},
[
  {"Module:encode", "Module:encode(R, Version)", "Module:encode-2"},
  {"Module:decode", "Module:decode(T, Version)", "Module:decode-2"}
]}.
{"megaco_edist_compress.html", {module, "megaco"}, ["megaco_edist_compress"]}.
{"megaco_encoder.html", {function, {"megaco", "megaco_encoder"}},
[
  {"Module:encode_message", "Module:encode_message(EncodingConfig, Version, Message)", "Module:encode_message-3"},
  {"Module:decode_message", "Module:decode_message(EncodingConfig, Version, Bin)", "Module:decode_message-3"},
  {"Module:decode_mini_message", "Module:decode_mini_message(EncodingConfig, Version, Bin)", "Module:decode_mini_message-3"},
  {"Module:encode_transaction", "Module:encode_transaction(EncodingConfig, Version, Transaction)", "Module:encode_transaction-3"},
  {"Module:encode_action_requests", "Module:encode_action_requests(EncodingConfig, Version, ARs)", "Module:encode_action_requests-3"},
  {"Module:encode_action_reply", "Module:encode_action_reply(EncodingConfig, Version, AR)", "Module:encode_action_reply-3"}
]}.
{"megaco_encoder.html", {module, "megaco"}, ["megaco_encoder"]}.
{"megaco_transport.html", {function, {"megaco", "megaco_transport"}},
[
  {"Module:send_message", "Module:send_message(Handle, Msg)", "Module:send_message-2"},
  {"Module:send_message", "Module:send_message(Handle, Msg, Resend)", "Module:send_message-3"},
  {"Module:resend_message", "Module:resend_message(Handle, Msg)", "Module:resend_message-2"}
]}.
{"megaco_transport.html", {module, "megaco"}, ["megaco_transport"]}.
{"megaco_tcp.html", {function, {"megaco", "megaco_tcp"}},
[
  {"start_transport", "start_transport()", "start_transport-0"},
  {"listen", "listen(TransportRef, ListenPortSpecList)", "listen-2"},
  {"connect", "connect(TransportRef, OptionList)", "connect-2"},
  {"close", "close(Handle)", "close-1"},
  {"socket", "socket(Handle)", "socket-1"},
  {"send_message", "send_message(Handle, Message)", "send_message-2"},
  {"block", "block(Handle)", "block-1"},
  {"unblock", "unblock(Handle)", "unblock-1"},
  {"upgrade_receive_handle", "upgrade_receive_handle(ControlPid)", "upgrade_receive_handle-1"},
  {"get_stats", "get_stats()", "get_stats-0"},
  {"get_stats", "get_stats(SendHandle)", "get_stats-1"},
  {"get_stats", "get_stats(SendHandle, Counter)", "get_stats-2"},
  {"reset_stats", "reset_stats()", "reset_stats-0"},
  {"reset_stats", "reset_stats(SendHandle)", "reset_stats-1"}
]}.
{"megaco_tcp.html", {module, "megaco"}, ["megaco_tcp"]}.
{"megaco_udp.html", {function, {"megaco", "megaco_udp"}},
[
  {"start_transport", "start_transport()", "start_transport-0"},
  {"open", "open(TransportRef, OptionList)", "open-2"},
  {"close", "close(Handle, Msg)", "close-2"},
  {"socket", "socket(Handle)", "socket-1"},
  {"create_send_handle", "create_send_handle(Handle, Host, Port)", "create_send_handle-3"},
  {"send_message", "send_message(SendHandle, Msg)", "send_message-2"},
  {"block", "block(Handle)", "block-1"},
  {"unblock", "unblock(Handle)", "unblock-1"},
  {"upgrade_receive_handle", "upgrade_receive_handle(ControlPid, NewHandle)", "upgrade_receive_handle-2"},
  {"get_stats", "get_stats()", "get_stats-0"},
  {"get_stats", "get_stats(SendHandle)", "get_stats-1"},
  {"get_stats", "get_stats(SendHandle, Counter)", "get_stats-2"},
  {"reset_stats", "reset_stats()", "reset_stats-0"},
  {"reset_stats", "reset_stats(SendHandle)", "reset_stats-1"}
]}.
{"megaco_udp.html", {module, "megaco"}, ["megaco_udp"]}.
{"megaco_user.html", {function, {"megaco", "megaco_user"}},
[
  {"handle_connect", "handle_connect(ConnHandle, ProtocolVersion)", "handle_connect-2"},
  {"handle_connect", "handle_connect(ConnHandle, ProtocolVersion, Extra])", "handle_connect-3"},
  {"handle_disconnect", "handle_disconnect(ConnHandle, ProtocolVersion, Reason)", "handle_disconnect-3"},
  {"handle_syntax_error", "handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED)", "handle_syntax_error-3"},
  {"handle_syntax_error", "handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED, Extra)", "handle_syntax_error-4"},
  {"handle_message_error", "handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr)", "handle_message_error-3"},
  {"handle_message_error", "handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr, Extra)", "handle_message_error-4"},
  {"handle_trans_request", "handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests)", "handle_trans_request-3"},
  {"handle_trans_request", "handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests, Extra)", "handle_trans_request-4"},
  {"handle_trans_long_request", "handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData)", "handle_trans_long_request-3"},
  {"handle_trans_long_request", "handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData, Extra)", "handle_trans_long_request-4"},
  {"handle_trans_reply", "handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData)", "handle_trans_reply-4"},
  {"handle_trans_reply", "handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData, Extra)", "handle_trans_reply-5"},
  {"handle_trans_ack", "handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData)", "handle_trans_ack-4"},
  {"handle_trans_ack", "handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData, Extra)", "handle_trans_ack-5"},
  {"handle_unexpected_trans", "handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans)", "handle_unexpected_trans-3"},
  {"handle_unexpected_trans", "handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans, Extra)", "handle_unexpected_trans-4"},
  {"handle_trans_request_abort", "handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid)", "handle_trans_request_abort-4"},
  {"handle_trans_request_abort", "handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid, Extra)", "handle_trans_request_abort-5"},
  {"handle_segment_reply", "handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl)", "handle_segment_reply-5"},
  {"handle_segment_reply", "handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl, Extra)", "handle_segment_reply-6"}
]}.
{"megaco_user.html", {module, "megaco"}, ["megaco_user"]}.
{"megaco_flex_scanner.html", {function, {"megaco", "megaco_flex_scanner"}},
[
  {"start", "start()", "start-0"},
  {"stop", "stop(PortOrPorts)", "stop-1"},
  {"is_reentrant_enabled", "is_reentrant_enabled()", "is_reentrant_enabled-0"},
  {"is_scanner_port", "is_scanner_port(Port, PortOrPorts)", "is_scanner_port-2"},
  {"scan", "scan(Binary, PortOrPorts)", "scan-2"}
]}.
{"megaco_flex_scanner.html", {module, "megaco"}, ["megaco_flex_scanner"]}.
{"megaco_codec_meas.html", {function, {"megaco", "megaco_codec_meas"}},
[
  {"start", "start()", "start-0"},
  {"start", "start(MessagePackage)", "start-1"}
]}.
{"megaco_codec_meas.html", {module, "megaco"}, ["megaco_codec_meas"]}.
{"megaco_codec_mstone1.html", {function, {"megaco", "megaco_codec_mstone1"}},
[
  {"start", "start()", "start-0"},
  {"start", "start(MessagePackage)", "start-1"},
  {"start", "start(MessagePackage, Factor)", "start-2"},
  {"start_flex", "start_flex()", "start_flex-0"},
  {"start_flex", "start_flex(MessagePackage)", "start_flex-1"},
  {"start_flex", "start_flex(MessagePackage, Factor)", "start_flex-2"},
  {"start_only_drv", "start_only_drv()", "start_only_drv-0"},
  {"start_only_drv", "start_only_drv(MessagePackage)", "start_only_drv-1"},
  {"start_only_drv", "start_only_drv(MessagePackage, Factor)", "start_only_drv-2"},
  {"start_no_drv", "start_no_drv()", "start_no_drv-0"},
  {"start_no_drv", "start_no_drv(MessagePackage)", "start_no_drv-1"},
  {"start_no_drv", "start_no_drv(MessagePackage, Factor)", "start_no_drv-2"}
]}.
{"megaco_codec_mstone1.html", {module, "megaco"}, ["megaco_codec_mstone1"]}.
{"megaco_codec_mstone2.html", {function, {"megaco", "megaco_codec_mstone2"}},
[
  {"start", "start()", "start-0"},
  {"start", "start(MessagePackage)", "start-1"}
]}.
{"megaco_codec_mstone2.html", {module, "megaco"}, ["megaco_codec_mstone2"]}.
{"megaco_codec_transform.html", {function, {"megaco", "megaco_codec_transform"}},
[
  {"export_messages", "export_messages()", "export_messages-0"},
  {"export_messages", "export_messages(MessagePackage)", "export_messages-1"}
]}.
{"megaco_codec_transform.html", {module, "megaco"}, ["megaco_codec_transform"]}.
{notused, application, ["megaco"]}.
