%% 
%% Search data file for ssl 10.7.3.9
%% generated maj 10, 2024
%% 
{"ssl_app.html", {app, "ssl"}, ["ssl"]}.
{"ssl.html", {function, {"ssl", "ssl"}},
[
  {"append_cipher_suites", "append_cipher_suites(Deferred, Suites)", "append_cipher_suites-2"},
  {"cipher_suites", "cipher_suites(Description, Version)", "cipher_suites-2"},
  {"cipher_suites", "cipher_suites(Description, Version, StringType :: rfc | openssl)", "cipher_suites-3"},
  {"eccs", "eccs()", "eccs-0"},
  {"eccs", "eccs(Version)", "eccs-1"},
  {"clear_pem_cache", "clear_pem_cache()", "clear_pem_cache-0"},
  {"connect", "connect(TCPSocket, TLSOptions)", "connect-2"},
  {"connect", "connect(TCPSocket, TLSOptions, Timeout)", "connect-3"},
  {"connect", "connect(Host, Port, TLSOptions)", "connect-3"},
  {"connect", "connect(Host, Port, TLSOptions, Timeout)", "connect-4"},
  {"close", "close(SslSocket)", "close-1"},
  {"close", "close(SslSocket, How)", "close-2"},
  {"controlling_process", "controlling_process(SslSocket, NewOwner)", "controlling_process-2"},
  {"connection_information", "connection_information(SslSocket)", "connection_information-1"},
  {"connection_information", "connection_information(SslSocket, Items)", "connection_information-2"},
  {"filter_cipher_suites", "filter_cipher_suites(Suites, Filters)", "filter_cipher_suites-2"},
  {"format_error", "format_error(Reason :: {error, Reason})", "format_error-1"},
  {"getopts", "getopts(SslSocket, OptionNames)", "getopts-2"},
  {"getstat", "getstat(SslSocket)", "getstat-1"},
  {"getstat", "getstat(SslSocket, Options)", "getstat-2"},
  {"handshake", "handshake(HsSocket)", "handshake-1"},
  {"handshake", "handshake(HsSocket, Timeout)", "handshake-2"},
  {"handshake", "handshake(Socket, Options)", "handshake-2"},
  {"handshake", "handshake(Socket, Options, Timeout)", "handshake-3"},
  {"handshake_cancel", "handshake_cancel(Sslsocket :: #sslsocket{})", "handshake_cancel-1"},
  {"handshake_continue", "handshake_continue(HsSocket, Options)", "handshake_continue-2"},
  {"handshake_continue", "handshake_continue(HsSocket, Options, Timeout)", "handshake_continue-3"},
  {"listen", "listen(Port, Options)", "listen-2"},
  {"negotiated_protocol", "negotiated_protocol(SslSocket)", "negotiated_protocol-1"},
  {"peercert", "peercert(SslSocket)", "peercert-1"},
  {"peername", "peername(SslSocket)", "peername-1"},
  {"prepend_cipher_suites", "prepend_cipher_suites(Preferred, Suites)", "prepend_cipher_suites-2"},
  {"prf", "prf(SslSocket, Secret, Label, Seed, WantedLength)", "prf-5"},
  {"recv", "recv(SslSocket, Length)", "recv-2"},
  {"recv", "recv(SslSocket, Length, Timeout)", "recv-3"},
  {"renegotiate", "renegotiate(SslSocket)", "renegotiate-1"},
  {"update_keys", "update_keys(SslSocket, Type)", "update_keys-2"},
  {"send", "send(SslSocket, Data)", "send-2"},
  {"setopts", "setopts(SslSocket, Options)", "setopts-2"},
  {"shutdown", "shutdown(SslSocket, How)", "shutdown-2"},
  {"sockname", "sockname(SslSocket)", "sockname-1"},
  {"start", "start()", "start-0"},
  {"start", "start(Type :: permanent | transient | temporary)", "start-1"},
  {"stop", "stop()", "stop-0"},
  {"str_to_suite", "str_to_suite(CipherSuiteName)", "str_to_suite-1"},
  {"suite_to_openssl_str", "suite_to_openssl_str(CipherSuite)", "suite_to_openssl_str-1"},
  {"suite_to_str", "suite_to_str(CipherSuite)", "suite_to_str-1"},
  {"transport_accept", "transport_accept(ListenSocket)", "transport_accept-1"},
  {"transport_accept", "transport_accept(ListenSocket, Timeout)", "transport_accept-2"},
  {"versions", "versions()", "versions-0"}
]}.
{"ssl.html", {module, "ssl"}, ["ssl"]}.
{"ssl_crl_cache.html", {function, {"ssl", "ssl_crl_cache"}},
[
  {"delete", "delete(Entries)", "delete-1"},
  {"insert", "insert(CRLSrc)", "insert-1"},
  {"insert", "insert(URI, CRLSrc)", "insert-2"}
]}.
{"ssl_crl_cache.html", {module, "ssl"}, ["ssl_crl_cache"]}.
{"ssl_crl_cache_api.html", {function, {"ssl", "ssl_crl_cache_api"}},
[
  {"Module:fresh_crl", "Module:fresh_crl(DistributionPoint, CRL)", "Module:fresh_crl-2"},
  {"Module:fresh_crl", "Module:fresh_crl(DistributionPoint, CRL)", "Module:fresh_crl-2"},
  {"Module:lookup", "Module:lookup(DistributionPoint, Issuer, DbHandle)", "Module:lookup-3"},
  {"Module:lookup", "Module:lookup(DistributionPoint, Issuer, DbHandle)", "Module:lookup-3"},
  {"Module:lookup", "Module:lookup(DistributionPoint, DbHandle)", "Module:lookup-2"},
  {"Module:select", "Module:select(Issuer, DbHandle)", "Module:select-2"},
  {"Module:select", "Module:select(Issuer, DbHandle)", "Module:select-2"}
]}.
{"ssl_crl_cache_api.html", {module, "ssl"}, ["ssl_crl_cache_api"]}.
{"ssl_session_cache_api.html", {function, {"ssl", "ssl_session_cache_api"}},
[
  {"Module:delete", "Module:delete(Cache, Key)", "Module:delete-2"},
  {"Module:foldl", "Module:foldl(Fun, Acc0, Cache)", "Module:foldl-3"},
  {"Module:init", "Module:init(Args)", "Module:init-1"},
  {"Module:lookup", "Module:lookup(Cache, Key)", "Module:lookup-2"},
  {"Module:select_session", "Module:select_session(Cache, PartialKey)", "Module:select_session-2"},
  {"Module:size", "Module:size(Cache)", "Module:size-1"},
  {"Module:terminate", "Module:terminate(Cache)", "Module:terminate-1"},
  {"Module:update", "Module:update(Cache, Key, Session)", "Module:update-3"}
]}.
{"ssl_session_cache_api.html", {module, "ssl"}, ["ssl_session_cache_api"]}.
{notused, application, ["ssl"]}.
