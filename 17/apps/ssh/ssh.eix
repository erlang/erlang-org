%% 
%% Search data file for ssh 3.2
%% generated March 31, 2015
%% 
{"SSH_app.html", {app, "ssh"}, ["SSH"]}.
{"ssh.html", {function, {"ssh", "ssh"}},
[
  {"close", "close(ConnectionRef)", "close-1"},
  {"connect", "connect(Host, Port, Options)", "connect-3"},
  {"connect", "connect(Host, Port, Options, Timeout)", "connect-4"},
  {"connection_info", "connection_info(ConnectionRef, [Option])", "connection_info-2"},
  {"daemon", "daemon(Port)", "daemon-1"},
  {"daemon", "daemon(Port, Options)", "daemon-2"},
  {"daemon", "daemon(HostAddress, Port, Options)", "daemon-3"},
  {"shell", "shell(Host)", "shell-1"},
  {"shell", "shell(Host, Option)", "shell-2"},
  {"shell", "shell(Host, Port, Option)", "shell-3"},
  {"start", "start()", "start-0"},
  {"start", "start(Type)", "start-1"},
  {"stop", "stop()", "stop-0"},
  {"stop_daemon", "stop_daemon(DaemonRef)", "stop_daemon-1"},
  {"stop_daemon", "stop_daemon(Address, Port)", "stop_daemon-2"},
  {"stop_listener", "stop_listener(DaemonRef)", "stop_listener-1"},
  {"stop_listener", "stop_listener(Address, Port)", "stop_listener-2"}
]}.
{"ssh.html", {module, "ssh"}, ["ssh"]}.
{"ssh_channel.html", {function, {"ssh", "ssh_channel"}},
[
  {"call", "call(ChannelRef, Msg)", "call-2"},
  {"call", "call(ChannelRef, Msg, Timeout)", "call-3"},
  {"cast", "cast(ChannelRef, Msg)", "cast-2"},
  {"enter_loop", "enter_loop(State)", "enter_loop-1"},
  {"init", "init(Options)", "init-1"},
  {"reply", "reply(Client, Reply)", "reply-2"},
  {"start", "start(SshConnection, ChannelId, ChannelCb, CbInitArgs)", "start-4"},
  {"start_link", "start_link(SshConnection, ChannelId, ChannelCb, CbInitArgs)", "start_link-4"},
  {"Module:code_change", "Module:code_change(OldVsn, State, Extra)", "Module:code_change-3"},
  {"Module:init", "Module:init(Args)", "Module:init-1"},
  {"Module:handle_call", "Module:handle_call(Msg, From, State)", "Module:handle_call-3"},
  {"Module:handle_cast", "Module:handle_cast(Msg, State)", "Module:handle_cast-2"},
  {"Module:handle_msg", "Module:handle_msg(Msg, State)", "Module:handle_msg-2"},
  {"Module:handle_ssh_msg", "Module:handle_ssh_msg(Msg, State)", "Module:handle_ssh_msg-2"},
  {"Module:terminate", "Module:terminate(Reason, State)", "Module:terminate-2"}
]}.
{"ssh_channel.html", {module, "ssh"}, ["ssh_channel"]}.
{"ssh_connection.html", {function, {"ssh", "ssh_connection"}},
[
  {"adjust_window", "adjust_window(ConnectionRef, ChannelId, NumOfBytes)", "adjust_window-3"},
  {"close", "close(ConnectionRef, ChannelId)", "close-2"},
  {"exec", "exec(ConnectionRef, ChannelId, Command, TimeOut)", "exec-4"},
  {"exit_status", "exit_status(ConnectionRef, ChannelId, Status)", "exit_status-3"},
  {"ptty_alloc", "ptty_alloc(ConnectionRef, ChannelId, Options)", "ptty_alloc-3"},
  {"ptty_alloc", "ptty_alloc(ConnectionRef, ChannelId, Options, Timeout)", "ptty_alloc-4"},
  {"reply_request", "reply_request(ConnectionRef, WantReply, Status, ChannelId)", "reply_request-4"},
  {"send", "send(ConnectionRef, ChannelId, Data)", "send-3"},
  {"send", "send(ConnectionRef, ChannelId, Data, Timeout)", "send-4"},
  {"send", "send(ConnectionRef, ChannelId, Type, Data)", "send-4"},
  {"send", "send(ConnectionRef, ChannelId, Type, Data, TimeOut)", "send-5"},
  {"send_eof", "send_eof(ConnectionRef, ChannelId)", "send_eof-2"},
  {"session_channel", "session_channel(ConnectionRef, Timeout)", "session_channel-2"},
  {"session_channel", "session_channel(ConnectionRef, InitialWindowSize, MaxPacketSize, Timeout)", "session_channel-4"},
  {"setenv", "setenv(ConnectionRef, ChannelId, Var, Value, TimeOut)", "setenv-5"},
  {"shell", "shell(ConnectionRef, ChannelId)", "shell-2"},
  {"subsystem", "subsystem(ConnectionRef, ChannelId, Subsystem, Timeout)", "subsystem-4"}
]}.
{"ssh_connection.html", {module, "ssh"}, ["ssh_connection"]}.
{"ssh_client_key_api.html", {function, {"ssh", "ssh_client_key_api"}},
[
  {"Module:add_host_key", "Module:add_host_key(HostNames, Key, ConnectOptions)", "Module:add_host_key-3"},
  {"Module:is_host_key", "Module:is_host_key(Key, Host, Algorithm, ConnectOptions)", "Module:is_host_key-4"},
  {"Module:user_key", "Module:user_key(Algorithm, ConnectOptions)", "Module:user_key-2"}
]}.
{"ssh_client_key_api.html", {module, "ssh"}, ["ssh_client_key_api"]}.
{"ssh_server_key_api.html", {function, {"ssh", "ssh_server_key_api"}},
[
  {"Module:host_key", "Module:host_key(Algorithm, DaemonOptions)", "Module:host_key-2"},
  {"Module:is_auth_key", "Module:is_auth_key(Key, User, DaemonOptions)", "Module:is_auth_key-3"}
]}.
{"ssh_server_key_api.html", {module, "ssh"}, ["ssh_server_key_api"]}.
{"ssh_sftp.html", {function, {"ssh", "ssh_sftp"}},
[
  {"start_channel", "start_channel(ConnectionRef)", "start_channel-1"},
  {"start_channel", "start_channel(ConnectionRef, Options)", "start_channel-2"},
  {"start_channel", "start_channel(Host, Options)", "start_channel-2"},
  {"start_channel", "start_channel(Host, Port, Options)", "start_channel-3"},
  {"stop_channel", "stop_channel(ChannelPid)", "stop_channel-1"},
  {"read_file", "read_file(ChannelPid, File)", "read_file-2"},
  {"read_file", "read_file(ChannelPid, File, Timeout)", "read_file-3"},
  {"write_file", "write_file(ChannelPid, File, Iolist)", "write_file-3"},
  {"write_file", "write_file(ChannelPid, File, Iolist, Timeout)", "write_file-4"},
  {"list_dir", "list_dir(ChannelPid, Path)", "list_dir-2"},
  {"list_dir", "list_dir(ChannelPid, Path, Timeout)", "list_dir-3"},
  {"open", "open(ChannelPid, File, Mode)", "open-3"},
  {"open", "open(ChannelPid, File, Mode, Timeout)", "open-4"},
  {"opendir", "opendir(ChannelPid, Path)", "opendir-2"},
  {"opendir", "opendir(ChannelPid, Path, Timeout)", "opendir-3"},
  {"open_tar", "open_tar(ChannelPid, Path, Mode)", "open_tar-3"},
  {"open_tar", "open_tar(ChannelPid, Path, Mode, Timeout)", "open_tar-4"},
  {"close", "close(ChannelPid, Handle)", "close-2"},
  {"close", "close(ChannelPid, Handle, Timeout)", "close-3"},
  {"read", "read(ChannelPid, Handle, Len)", "read-3"},
  {"read", "read(ChannelPid, Handle, Len, Timeout)", "read-4"},
  {"pread", "pread(ChannelPid, Handle, Position, Len)", "pread-4"},
  {"pread", "pread(ChannelPid, Handle, Position, Len, Timeout)", "pread-5"},
  {"aread", "aread(ChannelPid, Handle, Len)", "aread-3"},
  {"apread", "apread(ChannelPid, Handle, Position, Len)", "apread-4"},
  {"write", "write(ChannelPid, Handle, Data)", "write-3"},
  {"write", "write(ChannelPid, Handle, Data, Timeout)", "write-4"},
  {"pwrite", "pwrite(ChannelPid, Handle, Position, Data)", "pwrite-4"},
  {"pwrite", "pwrite(ChannelPid, Handle, Position, Data, Timeout)", "pwrite-5"},
  {"awrite", "awrite(ChannelPid, Handle, Data)", "awrite-3"},
  {"apwrite", "apwrite(ChannelPid, Handle, Position, Data)", "apwrite-4"},
  {"position", "position(ChannelPid, Handle, Location)", "position-3"},
  {"position", "position(ChannelPid, Handle, Location, Timeout)", "position-4"},
  {"read_file_info", "read_file_info(ChannelPid, Name)", "read_file_info-2"},
  {"read_file_info", "read_file_info(ChannelPid, Name, Timeout)", "read_file_info-3"},
  {"read_link_info", "read_link_info(ChannelPid, Name)", "read_link_info-2"},
  {"read_link_info", "read_link_info(ChannelPid, Name, Timeout)", "read_link_info-3"},
  {"write_file_info", "write_file_info(ChannelPid, Name, Info)", "write_file_info-3"},
  {"write_file_info", "write_file_info(ChannelPid, Name, Info, Timeout)", "write_file_info-4"},
  {"read_link", "read_link(ChannelPid, Name)", "read_link-2"},
  {"read_link", "read_link(ChannelPid, Name, Timeout)", "read_link-3"},
  {"make_symlink", "make_symlink(ChannelPid, Name, Target)", "make_symlink-3"},
  {"make_symlink", "make_symlink(ChannelPid, Name, Target, Timeout)", "make_symlink-4"},
  {"rename", "rename(ChannelPid, OldName, NewName)", "rename-3"},
  {"rename", "rename(ChannelPid, OldName, NewName, Timeout)", "rename-4"},
  {"delete", "delete(ChannelPid, Name)", "delete-2"},
  {"delete", "delete(ChannelPid, Name, Timeout)", "delete-3"},
  {"make_dir", "make_dir(ChannelPid, Name)", "make_dir-2"},
  {"make_dir", "make_dir(ChannelPid, Name, Timeout)", "make_dir-3"},
  {"del_dir", "del_dir(ChannelPid, Name)", "del_dir-2"},
  {"del_dir", "del_dir(ChannelPid, Name, Timeout)", "del_dir-3"}
]}.
{"ssh_sftp.html", {module, "ssh"}, ["ssh_sftp"]}.
{"ssh_sftpd.html", {function, {"ssh", "ssh_sftpd"}},
[
  {"subsystem_spec", "subsystem_spec(Options)", "subsystem_spec-1"}
]}.
{"ssh_sftpd.html", {module, "ssh"}, ["ssh_sftpd"]}.
{notused, application, ["ssh"]}.
