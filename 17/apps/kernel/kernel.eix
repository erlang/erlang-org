%% 
%% Search data file for kernel 3.2
%% generated March 31, 2015
%% 
{"kernel_app.html", {app, "kernel"}, ["kernel"]}.
{"application.html", {function, {"kernel", "application"}},
[
  {"get_all_env", "get_all_env()", "get_all_env-0"},
  {"get_all_env", "get_all_env(Application)", "get_all_env-1"},
  {"get_all_key", "get_all_key()", "get_all_key-0"},
  {"get_all_key", "get_all_key(Application)", "get_all_key-1"},
  {"get_application", "get_application()", "get_application-0"},
  {"get_application", "get_application(PidOrModule)", "get_application-1"},
  {"get_env", "get_env(Par)", "get_env-1"},
  {"get_env", "get_env(Application, Par)", "get_env-2"},
  {"get_env", "get_env(Application, Par, Def)", "get_env-3"},
  {"get_key", "get_key(Key)", "get_key-1"},
  {"get_key", "get_key(Application, Key)", "get_key-2"},
  {"load", "load(AppDescr)", "load-1"},
  {"load", "load(AppDescr, Distributed)", "load-2"},
  {"loaded_applications", "loaded_applications()", "loaded_applications-0"},
  {"permit", "permit(Application, Permission)", "permit-2"},
  {"set_env", "set_env(Application, Par, Val)", "set_env-3"},
  {"set_env", "set_env(Application, Par, Val, Opts)", "set_env-4"},
  {"ensure_started", "ensure_started(Application)", "ensure_started-1"},
  {"ensure_started", "ensure_started(Application, Type)", "ensure_started-2"},
  {"ensure_all_started", "ensure_all_started(Application)", "ensure_all_started-1"},
  {"ensure_all_started", "ensure_all_started(Application, Type)", "ensure_all_started-2"},
  {"start", "start(Application)", "start-1"},
  {"start", "start(Application, Type)", "start-2"},
  {"start_type", "start_type()", "start_type-0"},
  {"stop", "stop(Application)", "stop-1"},
  {"takeover", "takeover(Application, Type)", "takeover-2"},
  {"unload", "unload(Application)", "unload-1"},
  {"unset_env", "unset_env(Application, Par)", "unset_env-2"},
  {"unset_env", "unset_env(Application, Par, Opts)", "unset_env-3"},
  {"which_applications", "which_applications()", "which_applications-0"},
  {"which_applications", "which_applications(Timeout)", "which_applications-1"},
  {"Module:start", "Module:start(StartType, StartArgs)", "Module:start-2"},
  {"Module:start_phase", "Module:start_phase(Phase, StartType, PhaseArgs)", "Module:start_phase-3"},
  {"Module:prep_stop", "Module:prep_stop(State)", "Module:prep_stop-1"},
  {"Module:stop", "Module:stop(", "Module:stop-1"},
  {"Module:config_change", "Module:config_change(Changed, New, Removed)", "Module:config_change-3"}
]}.
{"application.html", {module, "kernel"}, ["application"]}.
{"auth.html", {function, {"kernel", "auth"}},
[
  {"is_auth", "is_auth(Node)", "is_auth-1"},
  {"cookie", "cookie()", "cookie-0"},
  {"cookie", "cookie(TheCookie)", "cookie-1"},
  {"node_cookie", "node_cookie([Node, Cookie])", "node_cookie-1"},
  {"node_cookie", "node_cookie(Node, Cookie)", "node_cookie-2"}
]}.
{"auth.html", {module, "kernel"}, ["auth"]}.
{"code.html", {function, {"kernel", "code"}},
[
  {"set_path", "set_path(Path)", "set_path-1"},
  {"get_path", "get_path()", "get_path-0"},
  {"add_path", "add_path(Dir)", "add_path-1"},
  {"add_pathz", "add_pathz(Dir)", "add_pathz-1"},
  {"add_patha", "add_patha(Dir)", "add_patha-1"},
  {"add_paths", "add_paths(Dirs)", "add_paths-1"},
  {"add_pathsz", "add_pathsz(Dirs)", "add_pathsz-1"},
  {"add_pathsa", "add_pathsa(Dirs)", "add_pathsa-1"},
  {"del_path", "del_path(NameOrDir)", "del_path-1"},
  {"replace_path", "replace_path(Name, Dir)", "replace_path-2"},
  {"load_file", "load_file(Module)", "load_file-1"},
  {"load_abs", "load_abs(Filename)", "load_abs-1"},
  {"ensure_loaded", "ensure_loaded(Module)", "ensure_loaded-1"},
  {"load_binary", "load_binary(Module, Filename, Binary)", "load_binary-3"},
  {"delete", "delete(Module)", "delete-1"},
  {"purge", "purge(Module)", "purge-1"},
  {"soft_purge", "soft_purge(Module)", "soft_purge-1"},
  {"is_loaded", "is_loaded(Module)", "is_loaded-1"},
  {"all_loaded", "all_loaded()", "all_loaded-0"},
  {"which", "which(Module)", "which-1"},
  {"get_object_code", "get_object_code(Module)", "get_object_code-1"},
  {"root_dir", "root_dir()", "root_dir-0"},
  {"lib_dir", "lib_dir()", "lib_dir-0"},
  {"lib_dir", "lib_dir(Name)", "lib_dir-1"},
  {"lib_dir", "lib_dir(Name, SubDir)", "lib_dir-2"},
  {"compiler_dir", "compiler_dir()", "compiler_dir-0"},
  {"priv_dir", "priv_dir(Name)", "priv_dir-1"},
  {"objfile_extension", "objfile_extension()", "objfile_extension-0"},
  {"stick_dir", "stick_dir(Dir)", "stick_dir-1"},
  {"unstick_dir", "unstick_dir(Dir)", "unstick_dir-1"},
  {"is_sticky", "is_sticky(Module)", "is_sticky-1"},
  {"rehash", "rehash()", "rehash-0"},
  {"where_is_file", "where_is_file(Filename)", "where_is_file-1"},
  {"clash", "clash()", "clash-0"},
  {"is_module_native", "is_module_native(Module)", "is_module_native-1"},
  {"get_mode", "get_mode()", "get_mode-0"}
]}.
{"code.html", {module, "kernel"}, ["code"]}.
{"disk_log.html", {function, {"kernel", "disk_log"}},
[
  {"accessible_logs", "accessible_logs()", "accessible_logs-0"},
  {"alog", "alog(Log, Term)", "alog-2"},
  {"balog", "balog(Log, Bytes)", "balog-2"},
  {"alog_terms", "alog_terms(Log, TermList)", "alog_terms-2"},
  {"balog_terms", "balog_terms(Log, ByteList)", "balog_terms-2"},
  {"block", "block(Log)", "block-1"},
  {"block", "block(Log, QueueLogRecords)", "block-2"},
  {"change_header", "change_header(Log, Header)", "change_header-2"},
  {"change_notify", "change_notify(Log, Owner, Notify)", "change_notify-3"},
  {"change_size", "change_size(Log, Size)", "change_size-2"},
  {"chunk", "chunk(Log, Continuation)", "chunk-2"},
  {"chunk", "chunk(Log, Continuation, N)", "chunk-3"},
  {"bchunk", "bchunk(Log, Continuation)", "bchunk-2"},
  {"bchunk", "bchunk(Log, Continuation, N)", "bchunk-3"},
  {"chunk_info", "chunk_info(Continuation)", "chunk_info-1"},
  {"chunk_step", "chunk_step(Log, Continuation, Step)", "chunk_step-3"},
  {"close", "close(Log)", "close-1"},
  {"format_error", "format_error(Error)", "format_error-1"},
  {"inc_wrap_file", "inc_wrap_file(Log)", "inc_wrap_file-1"},
  {"info", "info(Log)", "info-1"},
  {"lclose", "lclose(Log)", "lclose-1"},
  {"lclose", "lclose(Log, Node)", "lclose-2"},
  {"log", "log(Log, Term)", "log-2"},
  {"blog", "blog(Log, Bytes)", "blog-2"},
  {"log_terms", "log_terms(Log, TermList)", "log_terms-2"},
  {"blog_terms", "blog_terms(Log, BytesList)", "blog_terms-2"},
  {"open", "open(ArgL)", "open-1"},
  {"pid2name", "pid2name(Pid)", "pid2name-1"},
  {"reopen", "reopen(Log, File)", "reopen-2"},
  {"reopen", "reopen(Log, File, Head)", "reopen-3"},
  {"breopen", "breopen(Log, File, BHead)", "breopen-3"},
  {"sync", "sync(Log)", "sync-1"},
  {"truncate", "truncate(Log)", "truncate-1"},
  {"truncate", "truncate(Log, Head)", "truncate-2"},
  {"btruncate", "btruncate(Log, BHead)", "btruncate-2"},
  {"unblock", "unblock(Log)", "unblock-1"}
]}.
{"disk_log.html", {module, "kernel"}, ["disk_log"]}.
{"erl_boot_server.html", {function, {"kernel", "erl_boot_server"}},
[
  {"start", "start(Slaves)", "start-1"},
  {"start_link", "start_link(Slaves)", "start_link-1"},
  {"add_slave", "add_slave(Slave)", "add_slave-1"},
  {"delete_slave", "delete_slave(Slave)", "delete_slave-1"},
  {"which_slaves", "which_slaves()", "which_slaves-0"}
]}.
{"erl_boot_server.html", {module, "kernel"}, ["erl_boot_server"]}.
{"erl_ddll.html", {function, {"kernel", "erl_ddll"}},
[
  {"demonitor", "demonitor(MonitorRef)", "demonitor-1"},
  {"info", "info()", "info-0"},
  {"info", "info(Name)", "info-1"},
  {"info", "info(Name, Tag)", "info-2"},
  {"load", "load(Path, Name)", "load-2"},
  {"load_driver", "load_driver(Path, Name)", "load_driver-2"},
  {"monitor", "monitor(Tag, Item)", "monitor-2"},
  {"reload", "reload(Path, Name)", "reload-2"},
  {"reload_driver", "reload_driver(Path, Name)", "reload_driver-2"},
  {"try_load", "try_load(Path, Name, OptionList)", "try_load-3"},
  {"try_unload", "try_unload(Name, OptionList)", "try_unload-2"},
  {"unload", "unload(Name)", "unload-1"},
  {"unload_driver", "unload_driver(Name)", "unload_driver-1"},
  {"loaded_drivers", "loaded_drivers()", "loaded_drivers-0"},
  {"format_error", "format_error(ErrorDesc)", "format_error-1"}
]}.
{"erl_ddll.html", {module, "kernel"}, ["erl_ddll"]}.
{"erl_prim_loader.html", {function, {"kernel", "erl_prim_loader"}},
[
]}.
{"erl_prim_loader.html", {module, "kernel"}, ["erl_prim_loader"]}.
{"erlang.html", {function, {"kernel", "erlang"}},
[
]}.
{"erlang.html", {module, "kernel"}, ["erlang"]}.
{"error_handler.html", {function, {"kernel", "error_handler"}},
[
  {"undefined_function", "undefined_function(Module, Function, Args)", "undefined_function-3"},
  {"raise_undef_exception", "raise_undef_exception(Module, Function, Args)", "raise_undef_exception-3"},
  {"undefined_lambda", "undefined_lambda(Module, Fun, Args)", "undefined_lambda-3"}
]}.
{"error_handler.html", {module, "kernel"}, ["error_handler"]}.
{"error_logger.html", {function, {"kernel", "error_logger"}},
[
  {"error_msg", "error_msg(Format)", "error_msg-1"},
  {"error_msg", "error_msg(Format, Data)", "error_msg-2"},
  {"format", "format(Format, Data)", "format-2"},
  {"error_report", "error_report(Report)", "error_report-1"},
  {"error_report", "error_report(Type, Report)", "error_report-2"},
  {"warning_map", "warning_map()", "warning_map-0"},
  {"warning_msg", "warning_msg(Format)", "warning_msg-1"},
  {"warning_msg", "warning_msg(Format, Data)", "warning_msg-2"},
  {"warning_report", "warning_report(Report)", "warning_report-1"},
  {"warning_report", "warning_report(Type, Report)", "warning_report-2"},
  {"info_msg", "info_msg(Format)", "info_msg-1"},
  {"info_msg", "info_msg(Format, Data)", "info_msg-2"},
  {"info_report", "info_report(Report)", "info_report-1"},
  {"info_report", "info_report(Type, Report)", "info_report-2"},
  {"add_report_handler", "add_report_handler(Handler)", "add_report_handler-1"},
  {"add_report_handler", "add_report_handler(Handler, Args)", "add_report_handler-2"},
  {"delete_report_handler", "delete_report_handler(Handler)", "delete_report_handler-1"},
  {"tty", "tty(Flag)", "tty-1"},
  {"logfile", "logfile(Request :: {open, Filename})", "logfile-1"},
  {"logfile", "logfile(Request :: close)", "logfile-1"},
  {"logfile", "logfile(Request :: filename)", "logfile-1"}
]}.
{"error_logger.html", {module, "kernel"}, ["error_logger"]}.
{"file.html", {function, {"kernel", "file"}},
[
  {"advise", "advise(IoDevice, Offset, Length, Advise)", "advise-4"},
  {"allocate", "allocate(File, Offset, Length)", "allocate-3"},
  {"change_group", "change_group(Filename, Gid)", "change_group-2"},
  {"change_mode", "change_mode(Filename, Mode)", "change_mode-2"},
  {"change_owner", "change_owner(Filename, Uid)", "change_owner-2"},
  {"change_owner", "change_owner(Filename, Uid, Gid)", "change_owner-3"},
  {"change_time", "change_time(Filename, Mtime)", "change_time-2"},
  {"change_time", "change_time(Filename, Atime, Mtime)", "change_time-3"},
  {"close", "close(IoDevice)", "close-1"},
  {"consult", "consult(Filename)", "consult-1"},
  {"copy", "copy(Source, Destination)", "copy-2"},
  {"copy", "copy(Source, Destination, ByteCount)", "copy-3"},
  {"del_dir", "del_dir(Dir)", "del_dir-1"},
  {"delete", "delete(Filename)", "delete-1"},
  {"eval", "eval(Filename)", "eval-1"},
  {"eval", "eval(Filename, Bindings)", "eval-2"},
  {"format_error", "format_error(Reason)", "format_error-1"},
  {"get_cwd", "get_cwd()", "get_cwd-0"},
  {"get_cwd", "get_cwd(Drive)", "get_cwd-1"},
  {"list_dir", "list_dir(Dir)", "list_dir-1"},
  {"list_dir_all", "list_dir_all(Dir)", "list_dir_all-1"},
  {"make_dir", "make_dir(Dir)", "make_dir-1"},
  {"make_link", "make_link(Existing, New)", "make_link-2"},
  {"make_symlink", "make_symlink(Existing, New)", "make_symlink-2"},
  {"native_name_encoding", "native_name_encoding()", "native_name_encoding-0"},
  {"open", "open(File, Modes)", "open-2"},
  {"path_consult", "path_consult(Path, Filename)", "path_consult-2"},
  {"path_eval", "path_eval(Path, Filename)", "path_eval-2"},
  {"path_open", "path_open(Path, Filename, Modes)", "path_open-3"},
  {"path_script", "path_script(Path, Filename)", "path_script-2"},
  {"path_script", "path_script(Path, Filename, Bindings)", "path_script-3"},
  {"pid2name", "pid2name(Pid)", "pid2name-1"},
  {"position", "position(IoDevice, Location)", "position-2"},
  {"pread", "pread(IoDevice, LocNums)", "pread-2"},
  {"pread", "pread(IoDevice, Location, Number)", "pread-3"},
  {"pwrite", "pwrite(IoDevice, LocBytes)", "pwrite-2"},
  {"pwrite", "pwrite(IoDevice, Location, Bytes)", "pwrite-3"},
  {"read", "read(IoDevice, Number)", "read-2"},
  {"read_file", "read_file(Filename)", "read_file-1"},
  {"read_file_info", "read_file_info(Filename)", "read_file_info-1"},
  {"read_file_info", "read_file_info(Filename, Opts)", "read_file_info-2"},
  {"read_line", "read_line(IoDevice)", "read_line-1"},
  {"read_link", "read_link(Name)", "read_link-1"},
  {"read_link_all", "read_link_all(Name)", "read_link_all-1"},
  {"read_link_info", "read_link_info(Name)", "read_link_info-1"},
  {"read_link_info", "read_link_info(Name, Opts)", "read_link_info-2"},
  {"rename", "rename(Source, Destination)", "rename-2"},
  {"script", "script(Filename)", "script-1"},
  {"script", "script(Filename, Bindings)", "script-2"},
  {"set_cwd", "set_cwd(Dir)", "set_cwd-1"},
  {"sync", "sync(IoDevice)", "sync-1"},
  {"datasync", "datasync(IoDevice)", "datasync-1"},
  {"truncate", "truncate(IoDevice)", "truncate-1"},
  {"sendfile", "sendfile(Filename, Socket)", "sendfile-2"},
  {"sendfile", "sendfile(RawFile, Socket, Offset, Bytes, Opts)", "sendfile-5"},
  {"write", "write(IoDevice, Bytes)", "write-2"},
  {"write_file", "write_file(Filename, Bytes)", "write_file-2"},
  {"write_file", "write_file(Filename, Bytes, Modes)", "write_file-3"},
  {"write_file_info", "write_file_info(Filename, FileInfo)", "write_file_info-2"},
  {"write_file_info", "write_file_info(Filename, FileInfo, Opts)", "write_file_info-3"}
]}.
{"file.html", {module, "kernel"}, ["file"]}.
{"gen_tcp.html", {function, {"kernel", "gen_tcp"}},
[
  {"connect", "connect(Address, Port, Options)", "connect-3"},
  {"connect", "connect(Address, Port, Options, Timeout)", "connect-4"},
  {"listen", "listen(Port, Options)", "listen-2"},
  {"accept", "accept(ListenSocket)", "accept-1"},
  {"accept", "accept(ListenSocket, Timeout)", "accept-2"},
  {"send", "send(Socket, Packet)", "send-2"},
  {"recv", "recv(Socket, Length)", "recv-2"},
  {"recv", "recv(Socket, Length, Timeout)", "recv-3"},
  {"controlling_process", "controlling_process(Socket, Pid)", "controlling_process-2"},
  {"close", "close(Socket)", "close-1"},
  {"shutdown", "shutdown(Socket, How)", "shutdown-2"}
]}.
{"gen_tcp.html", {module, "kernel"}, ["gen_tcp"]}.
{"gen_udp.html", {function, {"kernel", "gen_udp"}},
[
  {"open", "open(Port)", "open-1"},
  {"open", "open(Port, Opts)", "open-2"},
  {"send", "send(Socket, Address, Port, Packet)", "send-4"},
  {"recv", "recv(Socket, Length)", "recv-2"},
  {"recv", "recv(Socket, Length, Timeout)", "recv-3"},
  {"controlling_process", "controlling_process(Socket, Pid)", "controlling_process-2"},
  {"close", "close(Socket)", "close-1"}
]}.
{"gen_udp.html", {module, "kernel"}, ["gen_udp"]}.
{"gen_sctp.html", {function, {"kernel", "gen_sctp"}},
[
  {"abort", "abort(Socket, Assoc)", "abort-2"},
  {"close", "close(Socket)", "close-1"},
  {"connect", "connect(Socket, Addr, Port, Opts)", "connect-4"},
  {"connect", "connect(Socket, Addr, Port, Opts, Timeout)", "connect-5"},
  {"connect_init", "connect_init(Socket, Addr, Port, Opts)", "connect_init-4"},
  {"connect_init", "connect_init(Socket, Addr, Port, Opts, Timeout)", "connect_init-5"},
  {"controlling_process", "controlling_process(Socket, Pid)", "controlling_process-2"},
  {"eof", "eof(Socket, Assoc)", "eof-2"},
  {"listen", "listen(Socket, IsServer)", "listen-2"},
  {"listen", "listen(Socket, Backlog)", "listen-2"},
  {"open", "open()", "open-0"},
  {"open", "open(Port)", "open-1"},
  {"open", "open(Opts)", "open-1"},
  {"open", "open(Port, Opts)", "open-2"},
  {"peeloff", "peeloff(Socket, Assoc)", "peeloff-2"},
  {"recv", "recv(Socket)", "recv-1"},
  {"recv", "recv(Socket, Timeout)", "recv-2"},
  {"send", "send(Socket, SndRcvInfo, Data)", "send-3"},
  {"send", "send(Socket, Assoc, Stream, Data)", "send-4"},
  {"error_string", "error_string(ErrorNumber)", "error_string-1"}
]}.
{"gen_sctp.html", {module, "kernel"}, ["gen_sctp"]}.
{"global.html", {function, {"kernel", "global"}},
[
  {"del_lock", "del_lock(Id)", "del_lock-1"},
  {"del_lock", "del_lock(Id, Nodes)", "del_lock-2"},
  {"notify_all_name", "notify_all_name(Name, Pid1, Pid2)", "notify_all_name-3"},
  {"random_exit_name", "random_exit_name(Name, Pid1, Pid2)", "random_exit_name-3"},
  {"random_notify_name", "random_notify_name(Name, Pid1, Pid2)", "random_notify_name-3"},
  {"register_name", "register_name(Name, Pid)", "register_name-2"},
  {"register_name", "register_name(Name, Pid, Resolve)", "register_name-3"},
  {"registered_names", "registered_names()", "registered_names-0"},
  {"re_register_name", "re_register_name(Name, Pid)", "re_register_name-2"},
  {"re_register_name", "re_register_name(Name, Pid, Resolve)", "re_register_name-3"},
  {"send", "send(Name, Msg)", "send-2"},
  {"set_lock", "set_lock(Id)", "set_lock-1"},
  {"set_lock", "set_lock(Id, Nodes)", "set_lock-2"},
  {"set_lock", "set_lock(Id, Nodes, Retries)", "set_lock-3"},
  {"sync", "sync()", "sync-0"},
  {"trans", "trans(Id, Fun)", "trans-2"},
  {"trans", "trans(Id, Fun, Nodes)", "trans-3"},
  {"trans", "trans(Id, Fun, Nodes, Retries)", "trans-4"},
  {"unregister_name", "unregister_name(Name)", "unregister_name-1"},
  {"whereis_name", "whereis_name(Name)", "whereis_name-1"}
]}.
{"global.html", {module, "kernel"}, ["global"]}.
{"global_group.html", {function, {"kernel", "global_group"}},
[
  {"global_groups", "global_groups()", "global_groups-0"},
  {"info", "info()", "info-0"},
  {"monitor_nodes", "monitor_nodes(Flag)", "monitor_nodes-1"},
  {"own_nodes", "own_nodes()", "own_nodes-0"},
  {"registered_names", "registered_names(Where)", "registered_names-1"},
  {"send", "send(Name, Msg)", "send-2"},
  {"send", "send(Where, Name, Msg)", "send-3"},
  {"sync", "sync()", "sync-0"},
  {"whereis_name", "whereis_name(Name)", "whereis_name-1"},
  {"whereis_name", "whereis_name(Where, Name)", "whereis_name-2"}
]}.
{"global_group.html", {module, "kernel"}, ["global_group"]}.
{"heart.html", {function, {"kernel", "heart"}},
[
  {"set_cmd", "set_cmd(Cmd)", "set_cmd-1"},
  {"clear_cmd", "clear_cmd()", "clear_cmd-0"},
  {"get_cmd", "get_cmd()", "get_cmd-0"}
]}.
{"heart.html", {module, "kernel"}, ["heart"]}.
{"inet.html", {function, {"kernel", "inet"}},
[
  {"close", "close(Socket)", "close-1"},
  {"get_rc", "get_rc()", "get_rc-0"},
  {"format_error", "format_error(Reason)", "format_error-1"},
  {"getaddr", "getaddr(Host, Family)", "getaddr-2"},
  {"getaddrs", "getaddrs(Host, Family)", "getaddrs-2"},
  {"gethostbyaddr", "gethostbyaddr(Address)", "gethostbyaddr-1"},
  {"gethostbyname", "gethostbyname(Hostname)", "gethostbyname-1"},
  {"gethostbyname", "gethostbyname(Hostname, Family)", "gethostbyname-2"},
  {"gethostname", "gethostname()", "gethostname-0"},
  {"getifaddrs", "getifaddrs()", "getifaddrs-0"},
  {"getopts", "getopts(Socket, Options)", "getopts-2"},
  {"getstat", "getstat(Socket)", "getstat-1"},
  {"getstat", "getstat(Socket, Options)", "getstat-2"},
  {"ntoa", "ntoa(IpAddress)", "ntoa-1"},
  {"parse_ipv4_address", "parse_ipv4_address(Address)", "parse_ipv4_address-1"},
  {"parse_ipv4strict_address", "parse_ipv4strict_address(Address)", "parse_ipv4strict_address-1"},
  {"parse_ipv6_address", "parse_ipv6_address(Address)", "parse_ipv6_address-1"},
  {"parse_ipv6strict_address", "parse_ipv6strict_address(Address)", "parse_ipv6strict_address-1"},
  {"parse_address", "parse_address(Address)", "parse_address-1"},
  {"parse_strict_address", "parse_strict_address(Address)", "parse_strict_address-1"},
  {"peername", "peername(Socket)", "peername-1"},
  {"peernames", "peernames(Socket)", "peernames-1"},
  {"peernames", "peernames(Socket, Assoc)", "peernames-2"},
  {"port", "port(Socket)", "port-1"},
  {"sockname", "sockname(Socket)", "sockname-1"},
  {"socknames", "socknames(Socket)", "socknames-1"},
  {"socknames", "socknames(Socket, Assoc)", "socknames-2"},
  {"setopts", "setopts(Socket, Options)", "setopts-2"}
]}.
{"inet.html", {module, "kernel"}, ["inet"]}.
{"inet_res.html", {function, {"kernel", "inet_res"}},
[
  {"getbyname", "getbyname(Name, Type)", "getbyname-2"},
  {"getbyname", "getbyname(Name, Type, Timeout)", "getbyname-3"},
  {"gethostbyaddr", "gethostbyaddr(Address)", "gethostbyaddr-1"},
  {"gethostbyaddr", "gethostbyaddr(Address, Timeout)", "gethostbyaddr-2"},
  {"gethostbyname", "gethostbyname(Name)", "gethostbyname-1"},
  {"gethostbyname", "gethostbyname(Name, Family)", "gethostbyname-2"},
  {"gethostbyname", "gethostbyname(Name, Family, Timeout)", "gethostbyname-3"},
  {"lookup", "lookup(Name, Class, Type)", "lookup-3"},
  {"lookup", "lookup(Name, Class, Type, Opts)", "lookup-4"},
  {"lookup", "lookup(Name, Class, Type, Opts, Timeout)", "lookup-5"},
  {"resolve", "resolve(Name, Class, Type)", "resolve-3"},
  {"resolve", "resolve(Name, Class, Type, Opts)", "resolve-4"},
  {"resolve", "resolve(Name, Class, Type, Opts, Timeout)", "resolve-5"},
  {"nslookup", "nslookup(Name, Class, Type)", "nslookup-3"},
  {"nslookup", "nslookup(Name, Class, Type, Timeout)", "nslookup-4"},
  {"nslookup", "nslookup(Name, Class, Type, Nameservers)", "nslookup-4"},
  {"nnslookup", "nnslookup(Name, Class, Type, Nameservers)", "nnslookup-4"},
  {"nnslookup", "nnslookup(Name, Class, Type, Nameservers, Timeout)", "nnslookup-5"}
]}.
{"inet_res.html", {module, "kernel"}, ["inet_res"]}.
{"init.html", {function, {"kernel", "init"}},
[
]}.
{"init.html", {module, "kernel"}, ["init"]}.
{"net_adm.html", {function, {"kernel", "net_adm"}},
[
  {"dns_hostname", "dns_hostname(Host)", "dns_hostname-1"},
  {"host_file", "host_file()", "host_file-0"},
  {"localhost", "localhost()", "localhost-0"},
  {"names", "names()", "names-0"},
  {"names", "names(Host)", "names-1"},
  {"ping", "ping(Node)", "ping-1"},
  {"world", "world()", "world-0"},
  {"world", "world(Arg)", "world-1"},
  {"world_list", "world_list(Hosts)", "world_list-1"},
  {"world_list", "world_list(Hosts, Arg)", "world_list-2"}
]}.
{"net_adm.html", {module, "kernel"}, ["net_adm"]}.
{"net_kernel.html", {function, {"kernel", "net_kernel"}},
[
  {"allow", "allow(Nodes)", "allow-1"},
  {"connect_node", "connect_node(Node)", "connect_node-1"},
  {"monitor_nodes", "monitor_nodes(Flag)", "monitor_nodes-1"},
  {"monitor_nodes", "monitor_nodes(Flag, Options)", "monitor_nodes-2"},
  {"get_net_ticktime", "get_net_ticktime()", "get_net_ticktime-0"},
  {"set_net_ticktime", "set_net_ticktime(NetTicktime)", "set_net_ticktime-1"},
  {"set_net_ticktime", "set_net_ticktime(NetTicktime, TransitionPeriod)", "set_net_ticktime-2"},
  {"start", "start([Name])", "start-1"},
  {"start", "start([Name, NameType])", "start-1"},
  {"start", "start([Name, NameType, Ticktime])", "start-1"},
  {"stop", "stop()", "stop-0"}
]}.
{"net_kernel.html", {module, "kernel"}, ["net_kernel"]}.
{"os.html", {function, {"kernel", "os"}},
[
  {"cmd", "cmd(Command)", "cmd-1"},
  {"find_executable", "find_executable(Name)", "find_executable-1"},
  {"find_executable", "find_executable(Name, Path)", "find_executable-2"},
  {"getenv", "getenv()", "getenv-0"},
  {"getenv", "getenv(VarName)", "getenv-1"},
  {"getpid", "getpid()", "getpid-0"},
  {"putenv", "putenv(VarName, Value)", "putenv-2"},
  {"timestamp", "timestamp()", "timestamp-0"},
  {"type", "type()", "type-0"},
  {"unsetenv", "unsetenv(VarName)", "unsetenv-1"},
  {"version", "version()", "version-0"}
]}.
{"os.html", {module, "kernel"}, ["os"]}.
{"pg2.html", {function, {"kernel", "pg2"}},
[
  {"create", "create(Name :: name())", "create-1"},
  {"delete", "delete(Name :: name())", "delete-1"},
  {"get_closest_pid", "get_closest_pid(Name)", "get_closest_pid-1"},
  {"get_members", "get_members(Name)", "get_members-1"},
  {"get_local_members", "get_local_members(Name)", "get_local_members-1"},
  {"join", "join(Name, Pid :: pid())", "join-2"},
  {"leave", "leave(Name, Pid :: pid())", "leave-2"},
  {"which_groups", "which_groups()", "which_groups-0"},
  {"start", "start()", "start-0"},
  {"start_link", "start_link()", "start_link-0"}
]}.
{"pg2.html", {module, "kernel"}, ["pg2"]}.
{"rpc.html", {function, {"kernel", "rpc"}},
[
  {"call", "call(Node, Module, Function, Args)", "call-4"},
  {"call", "call(Node, Module, Function, Args, Timeout)", "call-5"},
  {"block_call", "block_call(Node, Module, Function, Args)", "block_call-4"},
  {"block_call", "block_call(Node, Module, Function, Args, Timeout)", "block_call-5"},
  {"async_call", "async_call(Node, Module, Function, Args)", "async_call-4"},
  {"yield", "yield(Key)", "yield-1"},
  {"nb_yield", "nb_yield(Key)", "nb_yield-1"},
  {"nb_yield", "nb_yield(Key, Timeout)", "nb_yield-2"},
  {"multicall", "multicall(Module, Function, Args)", "multicall-3"},
  {"multicall", "multicall(Nodes, Module, Function, Args)", "multicall-4"},
  {"multicall", "multicall(Module, Function, Args, Timeout)", "multicall-4"},
  {"multicall", "multicall(Nodes, Module, Function, Args, Timeout)", "multicall-5"},
  {"cast", "cast(Node, Module, Function, Args)", "cast-4"},
  {"eval_everywhere", "eval_everywhere(Module, Function, Args)", "eval_everywhere-3"},
  {"eval_everywhere", "eval_everywhere(Nodes, Module, Function, Args)", "eval_everywhere-4"},
  {"abcast", "abcast(Name, Msg)", "abcast-2"},
  {"abcast", "abcast(Nodes, Name, Msg)", "abcast-3"},
  {"sbcast", "sbcast(Name, Msg)", "sbcast-2"},
  {"sbcast", "sbcast(Nodes, Name, Msg)", "sbcast-3"},
  {"server_call", "server_call(Node, Name, ReplyWrapper, Msg)", "server_call-4"},
  {"multi_server_call", "multi_server_call(Name, Msg)", "multi_server_call-2"},
  {"multi_server_call", "multi_server_call(Nodes, Name, Msg)", "multi_server_call-3"},
  {"safe_multi_server_call", "safe_multi_server_call(Name, Msg)", "safe_multi_server_call-2"},
  {"safe_multi_server_call", "safe_multi_server_call(Nodes, Name, Msg)", "safe_multi_server_call-3"},
  {"parallel_eval", "parallel_eval(FuncCalls)", "parallel_eval-1"},
  {"pmap", "pmap(FuncSpec, ExtraArgs, List1)", "pmap-3"},
  {"pinfo", "pinfo(Pid)", "pinfo-1"},
  {"pinfo", "pinfo(Pid, Item)", "pinfo-2"}
]}.
{"rpc.html", {module, "kernel"}, ["rpc"]}.
{"seq_trace.html", {function, {"kernel", "seq_trace"}},
[
  {"set_token", "set_token(Token)", "set_token-1"},
  {"set_token", "set_token(Component, Val)", "set_token-2"},
  {"get_token", "get_token()", "get_token-0"},
  {"get_token", "get_token(Component)", "get_token-1"},
  {"print", "print(TraceInfo)", "print-1"},
  {"print", "print(Label, TraceInfo)", "print-2"},
  {"reset_trace", "reset_trace()", "reset_trace-0"},
  {"set_system_tracer", "set_system_tracer(Tracer)", "set_system_tracer-1"},
  {"get_system_tracer", "get_system_tracer()", "get_system_tracer-0"}
]}.
{"seq_trace.html", {module, "kernel"}, ["seq_trace"]}.
{"user.html", {function, {"kernel", "user"}},
[
]}.
{"user.html", {module, "kernel"}, ["user"]}.
{"wrap_log_reader.html", {function, {"kernel", "wrap_log_reader"}},
[
  {"chunk", "chunk(Continuation)", "chunk-1"},
  {"chunk", "chunk(Continuation, N)", "chunk-2"},
  {"close", "close(Continuation)", "close-1"},
  {"open", "open(Filename)", "open-1"},
  {"open", "open(Filename, N)", "open-2"}
]}.
{"wrap_log_reader.html", {module, "kernel"}, ["wrap_log_reader"]}.
{"zlib.html", {function, {"kernel", "zlib"}},
[
]}.
{"zlib.html", {module, "kernel"}, ["zlib"]}.
{"app.html", {file, "kernel"}, ["app"]}.
{"config.html", {file, "kernel"}, ["config"]}.
{notused, application, ["kernel"]}.
