%% 
%% Search data file for test_server 3.8
%% generated March 31, 2015
%% 
{"test_server_app.html", {app, "test_server"}, ["test_server"]}.
{"test_server_ctrl.html", {function, {"test_server", "test_server_ctrl"}},
[
  {"start", "start()", "start-0"},
  {"stop", "stop()", "stop-0"},
  {"add_dir", "add_dir(Name, Dir)", "add_dir-2"},
  {"add_dir", "add_dir(Name, Dir, Pattern)", "add_dir-3"},
  {"add_dir", "add_dir(Name, [Dir|Dirs])", "add_dir-2"},
  {"add_dir", "add_dir(Name, [Dir|Dirs], Pattern)", "add_dir-3"},
  {"add_module", "add_module(Mod)", "add_module-1"},
  {"add_module", "add_module(Name, [Mod|Mods])", "add_module-2"},
  {"add_case", "add_case(Mod, Case)", "add_case-2"},
  {"add_case", "add_case(Name, Mod, Case)", "add_case-3"},
  {"add_cases", "add_cases(Mod, Cases)", "add_cases-2"},
  {"add_cases", "add_cases(Name, Mod, Cases)", "add_cases-3"},
  {"add_spec", "add_spec(TestSpecFile)", "add_spec-1"},
  {"add_dir_with_skip", "add_dir_with_skip(Name, [Dir|Dirs], Skip)", "add_dir_with_skip-3"},
  {"add_dir_with_skip", "add_dir_with_skip(Name, [Dir|Dirs], Pattern, Skip)", "add_dir_with_skip-4"},
  {"add_module_with_skip", "add_module_with_skip(Mod, Skip)", "add_module_with_skip-2"},
  {"add_module_with_skip", "add_module_with_skip(Name, [Mod|Mods], Skip)", "add_module_with_skip-3"},
  {"add_case_with_skip", "add_case_with_skip(Mod, Case, Skip)", "add_case_with_skip-3"},
  {"add_case_with_skip", "add_case_with_skip(Name, Mod, Case, Skip)", "add_case_with_skip-4"},
  {"add_cases_with_skip", "add_cases_with_skip(Mod, Cases, Skip)", "add_cases_with_skip-3"},
  {"add_cases_with_skip", "add_cases_with_skip(Name, Mod, Cases, Skip)", "add_cases_with_skip-4"},
  {"add_tests_with_skip", "add_tests_with_skip(Name, Tests, Skip)", "add_tests_with_skip-3"},
  {"abort_current_testcase", "abort_current_testcase(Reason)", "abort_current_testcase-1"},
  {"set_levels", "set_levels(Console, Major, Minor)", "set_levels-3"},
  {"get_levels", "get_levels()", "get_levels-0"},
  {"jobs", "jobs()", "jobs-0"},
  {"multiply_timetraps", "multiply_timetraps(N)", "multiply_timetraps-1"},
  {"scale_timetraps", "scale_timetraps(Bool)", "scale_timetraps-1"},
  {"get_timetrap_parameters", "get_timetrap_parameters()", "get_timetrap_parameters-0"},
  {"cover", "cover(Application,Analyse)", "cover-2"},
  {"cover", "cover(CoverFile,Analyse)", "cover-2"},
  {"cover", "cover(App,CoverFile,Analyse)", "cover-3"},
  {"cross_cover_analyse", "cross_cover_analyse(Level, Tests)", "cross_cover_analyse-2"},
  {"trc", "trc(TraceInfoFile)", "trc-1"},
  {"stop_trace", "stop_trace()", "stop_trace-0"},
  {"run_test", "run_test(CommandLine)", "run_test-1"},
  {"get_suite", "get_suite(Mod,Func)", "get_suite-2"},
  {"init_tc", "init_tc(Mod,Func,Args0)", "init_tc-3"},
  {"end_tc", "end_tc(Mod,Func,Status)", "end_tc-3"},
  {"report", "report(What,Data)", "report-2"},
  {"error_notification", "error_notification(Mod, Func, Args, Error)", "error_notification-4"},
  {"warn", "warn(What)", "warn-1"},
  {"target_info", "target_info()", "target_info-0"}
]}.
{"test_server_ctrl.html", {module, "test_server"}, ["test_server_ctrl"]}.
{"test_server.html", {function, {"test_server", "test_server"}},
[
  {"os_type", "os_type()", "os_type-0"},
  {"fail", "fail(", "fail-0"},
  {"fail", "fail(", "fail-1"},
  {"timetrap", "timetrap(Timout)", "timetrap-1"},
  {"timetrap_cancel", "timetrap_cancel(Handle)", "timetrap_cancel-1"},
  {"timetrap_scale_factor", "timetrap_scale_factor()", "timetrap_scale_factor-0"},
  {"sleep", "sleep(MSecs)", "sleep-1"},
  {"adjusted_sleep", "adjusted_sleep(MSecs)", "adjusted_sleep-1"},
  {"hours", "hours(N)", "hours-1"},
  {"minutes", "minutes(N)", "minutes-1"},
  {"seconds", "seconds(N)", "seconds-1"},
  {"format", "format(Format)", "format-1"},
  {"format", "format(", "format-2"},
  {"format", "format(", "format-2"},
  {"format", "format(", "format-3"},
  {"capture_start", "capture_start()", "capture_start-0"},
  {"capture_stop", "capture_stop()", "capture_stop-0"},
  {"capture_get", "capture_get()", "capture_get-0"},
  {"messages_get", "messages_get()", "messages_get-0"},
  {"timecall", "timecall(M, F, A)", "timecall-3"},
  {"do_times", "do_times(N, M, F, A)", "do_times-4"},
  {"do_times", "do_times(", "do_times-2"},
  {"m_out_of_n", "m_out_of_n(M, N, Fun)", "m_out_of_n-3"},
  {"call_crash", "call_crash(M, F, A)", "call_crash-3"},
  {"call_crash", "call_crash(Time, M, F, A)", "call_crash-4"},
  {"call_crash", "call_crash(Time, Crash, M, F, A)", "call_crash-5"},
  {"temp_name", "temp_name(Stem)", "temp_name-1"},
  {"break", "break(Comment)", "break-1"},
  {"continue", "continue()", "continue-0"},
  {"run_on_shielded_node", "run_on_shielded_node(Fun, CArgs)", "run_on_shielded_node-2"},
  {"start_node", "start_node(Name, Type, Options)", "start_node-3"},
  {"stop_node", "stop_node(NodeName)", "stop_node-1"},
  {"is_commercial", "is_commercial()", "is_commercial-0"},
  {"is_release_available", "is_release_available(Release)", "is_release_available-1"},
  {"is_native", "is_native(Mod)", "is_native-1"},
  {"app_test", "app_test(App)", "app_test-1"},
  {"app_test", "app_test(", "app_test-2"},
  {"appup_test", "appup_test(App)", "appup_test-1"},
  {"comment", "comment(Comment)", "comment-1"},
  {"all", "all(suite)", "all-1"},
  {"init_per_suite", "init_per_suite(Config0)", "init_per_suite-1"},
  {"end_per_suite", "end_per_suite(Config)", "end_per_suite-1"},
  {"init_per_testcase", "init_per_testcase(Case, Config0)", "init_per_testcase-2"},
  {"end_per_testcase", "end_per_testcase(Case, Config)", "end_per_testcase-2"},
  {"Case", "Case(doc)", "Case-1"},
  {"Case", "Case(suite)", "Case-1"},
  {"Case", "Case(Config)", "Case-1"}
]}.
{"test_server.html", {module, "test_server"}, ["test_server"]}.
{notused, application, ["test_server"]}.
