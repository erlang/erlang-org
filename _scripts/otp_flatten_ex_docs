#!/bin/bash

# This script takes an ex_doc documentation which looks like this
#  - doc/index.html
#  - doc/system/index.html
#  - erts-$VSN/doc/html/index.html
#  - lib/$APP/doc/html/index.html
#
# and moves things around to create this structure
#
#  - index.html
#  - system/index.html
#  - apps/erts/index.html
#  - apps/$APP/index.html
#
# It will also fix things so that algolia search works as it should.

set -e
set -o pipefail

SOURCE_DIR="$1"
MAJOR_VSN="$2"
LATEST_MAJOR_VSN="$3"
TARGET_DIR="$(dirname $1)/doc-1"
INCLUDE_SEARCH="$1"

APP_VSNS=$(cd "${SOURCE_DIR}/lib/" && ls -d -1 * && cd .. && ls -d -1 erts-*)



_app_name() {
    echo ${APP_VSN} | awk -F- '{print $1}'
}

_fixup_doc_links() {

    local ADJUST_PATH="\\.\\./\\.\\./"
    local FIXUP=""
    local APP_NAME=$(basename $(dirname "$1"))

    case "$APP_NAME" in
        "doc-1"|"system"|"erts")
            ADJUST_PATH="\\.\\./";;
    esac

    FIXUP="${FIXUP} -e s:${ADJUST_PATH}doc/system:system:g"
    FIXUP="${FIXUP} -e s:${ADJUST_PATH}doc/::g"

    for APP_VSN in ${APP_VSNS}; do
        local APP=$(_app_name "${APP_VSN}")
        if [ $APP = "erts" ]; then
            FIXUP="${FIXUP} -e s:${ADJUST_PATH}${APP_VSN}/doc/html/:apps/${APP}/:g"
        else
            FIXUP="${FIXUP} -e s:${ADJUST_PATH}lib/${APP_VSN}/doc/html/:apps/${APP}/:g"
        fi
    done

    sed $FIXUP -i -- "$@"
}

_fixup_search_link() {
    sed 's@\s*<title>@<meta name="exdoc:full-text-search-url" content="/doc/search.html?v='"${MAJOR_VSN}"'\&q=">\n&@g' -i -- "$@"
}

_fixup_major_version() {
    sed 's@\s*<title>@<meta name="major-vsn" content="'"${MAJOR_VSN}"'">\n&@g' -i -- "$@"
}

_disable_autocomplete() {
    sed 's@\s*<title>@<meta name="exdoc:autocomplete" content="off">\n&@g' -i -- "$@"
}


_flatten_and_update_docs() {
    _fixup_doc_links "$@"
}

mkdir "${TARGET_DIR}"

( GLOBIGNORE="${SOURCE_DIR}/doc/system"; cp -r "${SOURCE_DIR}/doc/"* "${TARGET_DIR}/" )
_flatten_and_update_docs "${TARGET_DIR}/"*.html
cp -r "${SOURCE_DIR}/doc/system" "${TARGET_DIR}/system"
_flatten_and_update_docs "${TARGET_DIR}/system/"*.html

mkdir "${TARGET_DIR}/apps"

for APP_VSN in ${APP_VSNS}; do
    APP=$(_app_name "${APP_VSN}")
    if [ $APP = "erts" ]; then
        cp -r "${SOURCE_DIR}/${APP_VSN}/doc/html" "${TARGET_DIR}/apps/${APP}"
    else
        cp -r "${SOURCE_DIR}/lib/${APP_VSN}/doc/html" "${TARGET_DIR}/apps/${APP}"
    fi
    _flatten_and_update_docs "${TARGET_DIR}/apps/${APP}/"*.html
done

exit 0
