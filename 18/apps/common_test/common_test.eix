%% 
%% Search data file for common_test 1.12
%% generated March 14, 2016
%% 
{"common_test.html", {function, {"common_test", "common_test"}},
[
  {"Module:all", "Module:all()", "Module:all-0"},
  {"Module:groups", "Module:groups()", "Module:groups-0"},
  {"Module:suite", "Module:suite()", "Module:suite-0"},
  {"Module:init_per_suite", "Module:init_per_suite(Config)", "Module:init_per_suite-1"},
  {"Module:end_per_suite", "Module:end_per_suite(Config)", "Module:end_per_suite-1"},
  {"Module:group", "Module:group(GroupName)", "Module:group-1"},
  {"Module:init_per_group", "Module:init_per_group(GroupName, Config)", "Module:init_per_group-2"},
  {"Module:end_per_group", "Module:end_per_group(GroupName, Config)", "Module:end_per_group-2"},
  {"Module:init_per_testcase", "Module:init_per_testcase(TestCase, Config)", "Module:init_per_testcase-2"},
  {"Module:end_per_testcase", "Module:end_per_testcase(TestCase, Config)", "Module:end_per_testcase-2"},
  {"Module:Testcase", "Module:Testcase()", "Module:Testcase-0"},
  {"Module:Testcase", "Module:Testcase(Config)", "Module:Testcase-1"}
]}.
{"common_test.html", {module, "common_test"}, ["common_test"]}.
{"ct_run.html", {command, "common_test"}, ["ct_run"]}.
{"ct.html", {function, {"common_test", "ct"}},
[
  {"abort_current_testcase", "abort_current_testcase(Reason)", "abort_current_testcase-1"},
  {"add_config", "add_config(Callback, Config)", "add_config-2"},
  {"break", "break(Comment)", "break-1"},
  {"break", "break(TestCase, Comment)", "break-2"},
  {"capture_get", "capture_get()", "capture_get-0"},
  {"capture_get", "capture_get(ExclCategories)", "capture_get-1"},
  {"capture_start", "capture_start()", "capture_start-0"},
  {"capture_stop", "capture_stop()", "capture_stop-0"},
  {"comment", "comment(Comment)", "comment-1"},
  {"comment", "comment(Format, Args)", "comment-2"},
  {"continue", "continue()", "continue-0"},
  {"continue", "continue(TestCase)", "continue-1"},
  {"decrypt_config_file", "decrypt_config_file(EncryptFileName, TargetFileName)", "decrypt_config_file-2"},
  {"decrypt_config_file", "decrypt_config_file(EncryptFileName, TargetFileName, KeyOrFile)", "decrypt_config_file-3"},
  {"encrypt_config_file", "encrypt_config_file(SrcFileName, EncryptFileName)", "encrypt_config_file-2"},
  {"encrypt_config_file", "encrypt_config_file(SrcFileName, EncryptFileName, KeyOrFile)", "encrypt_config_file-3"},
  {"fail", "fail(Reason)", "fail-1"},
  {"fail", "fail(Format, Args)", "fail-2"},
  {"get_config", "get_config(Required)", "get_config-1"},
  {"get_config", "get_config(Required, Default)", "get_config-2"},
  {"get_config", "get_config(Required, Default, Opts)", "get_config-3"},
  {"get_event_mgr_ref", "get_event_mgr_ref()", "get_event_mgr_ref-0"},
  {"get_status", "get_status()", "get_status-0"},
  {"get_target_name", "get_target_name(Handle)", "get_target_name-1"},
  {"get_testspec_terms", "get_testspec_terms()", "get_testspec_terms-0"},
  {"get_testspec_terms", "get_testspec_terms(Tags)", "get_testspec_terms-1"},
  {"get_timetrap_info", "get_timetrap_info()", "get_timetrap_info-0"},
  {"install", "install(Opts)", "install-1"},
  {"listenv", "listenv(Telnet)", "listenv-1"},
  {"log", "log(Format)", "log-1"},
  {"log", "log(X1, X2)", "log-2"},
  {"log", "log(X1, X2, X3)", "log-3"},
  {"log", "log(X1, X2, X3, X4)", "log-4"},
  {"log", "log(Category, Importance, Format, FormatArgs, Opts)", "log-5"},
  {"make_priv_dir", "make_priv_dir()", "make_priv_dir-0"},
  {"notify", "notify(Name, Data)", "notify-2"},
  {"pal", "pal(Format)", "pal-1"},
  {"pal", "pal(X1, X2)", "pal-2"},
  {"pal", "pal(X1, X2, X3)", "pal-3"},
  {"pal", "pal(Category, Importance, Format, FormatArgs)", "pal-4"},
  {"parse_table", "parse_table(Data)", "parse_table-1"},
  {"print", "print(Format)", "print-1"},
  {"print", "print(X1, X2)", "print-2"},
  {"print", "print(X1, X2, X3)", "print-3"},
  {"print", "print(Category, Importance, Format, FormatArgs)", "print-4"},
  {"reload_config", "reload_config(Required)", "reload_config-1"},
  {"remove_config", "remove_config(Callback, Config)", "remove_config-2"},
  {"require", "require(Required)", "require-1"},
  {"require", "require(Name, Required)", "require-2"},
  {"run", "run(TestDirs)", "run-1"},
  {"run", "run(TestDir, Suite)", "run-2"},
  {"run", "run(TestDir, Suite, Cases)", "run-3"},
  {"run_test", "run_test(Opts)", "run_test-1"},
  {"run_testspec", "run_testspec(TestSpec)", "run_testspec-1"},
  {"sleep", "sleep(Time)", "sleep-1"},
  {"start_interactive", "start_interactive()", "start_interactive-0"},
  {"step", "step(TestDir, Suite, Case)", "step-3"},
  {"step", "step(TestDir, Suite, Case, Opts)", "step-4"},
  {"stop_interactive", "stop_interactive()", "stop_interactive-0"},
  {"sync_notify", "sync_notify(Name, Data)", "sync_notify-2"},
  {"testcases", "testcases(TestDir, Suite)", "testcases-2"},
  {"timetrap", "timetrap(Time)", "timetrap-1"},
  {"userdata", "userdata(TestDir, Suite)", "userdata-2"},
  {"userdata", "userdata(TestDir, Suite, Case::GroupOrCase)", "userdata-3"}
]}.
{"ct.html", {module, "common_test"}, ["ct"]}.
{"ct_master.html", {function, {"common_test", "ct_master"}},
[
  {"abort", "abort()", "abort-0"},
  {"abort", "abort(Nodes)", "abort-1"},
  {"basic_html", "basic_html(Bool)", "basic_html-1"},
  {"get_event_mgr_ref", "get_event_mgr_ref()", "get_event_mgr_ref-0"},
  {"progress", "progress()", "progress-0"},
  {"run", "run(TestSpecs)", "run-1"},
  {"run", "run(TestSpecs, InclNodes, ExclNodes)", "run-3"},
  {"run", "run(TestSpecs, AllowUserTerms, InclNodes, ExclNodes)", "run-4"},
  {"run_on_node", "run_on_node(TestSpecs, Node)", "run_on_node-2"},
  {"run_on_node", "run_on_node(TestSpecs, AllowUserTerms, Node)", "run_on_node-3"},
  {"run_test", "run_test(Node, Opts)", "run_test-2"}
]}.
{"ct_master.html", {module, "common_test"}, ["ct_master"]}.
{"ct_cover.html", {function, {"common_test", "ct_cover"}},
[
  {"add_nodes", "add_nodes(Nodes)", "add_nodes-1"},
  {"cross_cover_analyse", "cross_cover_analyse(Level, Tests)", "cross_cover_analyse-2"},
  {"remove_nodes", "remove_nodes(Nodes)", "remove_nodes-1"}
]}.
{"ct_cover.html", {module, "common_test"}, ["ct_cover"]}.
{"ct_ftp.html", {function, {"common_test", "ct_ftp"}},
[
  {"cd", "cd(Connection, Dir)", "cd-2"},
  {"close", "close(Connection)", "close-1"},
  {"delete", "delete(Connection, File)", "delete-2"},
  {"get", "get(KeyOrName, RemoteFile, LocalFile)", "get-3"},
  {"ls", "ls(Connection, Dir)", "ls-2"},
  {"open", "open(KeyOrName)", "open-1"},
  {"put", "put(KeyOrName, LocalFile, RemoteFile)", "put-3"},
  {"recv", "recv(Connection, RemoteFile)", "recv-2"},
  {"recv", "recv(Connection, RemoteFile, LocalFile)", "recv-3"},
  {"send", "send(Connection, LocalFile)", "send-2"},
  {"send", "send(Connection, LocalFile, RemoteFile)", "send-3"},
  {"type", "type(Connection, Type)", "type-2"}
]}.
{"ct_ftp.html", {module, "common_test"}, ["ct_ftp"]}.
{"ct_ssh.html", {function, {"common_test", "ct_ssh"}},
[
  {"apread", "apread(SSH, Handle, Position, Length)", "apread-4"},
  {"apread", "apread(SSH, Server, Handle, Position, Length)", "apread-5"},
  {"apwrite", "apwrite(SSH, Handle, Position, Data)", "apwrite-4"},
  {"apwrite", "apwrite(SSH, Server, Handle, Position, Data)", "apwrite-5"},
  {"aread", "aread(SSH, Handle, Len)", "aread-3"},
  {"aread", "aread(SSH, Server, Handle, Len)", "aread-4"},
  {"awrite", "awrite(SSH, Handle, Data)", "awrite-3"},
  {"awrite", "awrite(SSH, Server, Handle, Data)", "awrite-4"},
  {"close", "close(SSH, Handle)", "close-2"},
  {"close", "close(SSH, Server, Handle)", "close-3"},
  {"connect", "connect(KeyOrName)", "connect-1"},
  {"connect", "connect(KeyOrName, ConnType)", "connect-2"},
  {"connect", "connect(KeyOrName, ConnType, ExtraOpts)", "connect-3"},
  {"del_dir", "del_dir(SSH, Name)", "del_dir-2"},
  {"del_dir", "del_dir(SSH, Server, Name)", "del_dir-3"},
  {"delete", "delete(SSH, Name)", "delete-2"},
  {"delete", "delete(SSH, Server, Name)", "delete-3"},
  {"disconnect", "disconnect(SSH)", "disconnect-1"},
  {"exec", "exec(SSH, Command)", "exec-2"},
  {"exec", "exec(SSH, Command, Timeout)", "exec-3"},
  {"exec", "exec(SSH, ChannelId, Command, Timeout)", "exec-4"},
  {"get_file_info", "get_file_info(SSH, Handle)", "get_file_info-2"},
  {"get_file_info", "get_file_info(SSH, Server, Handle)", "get_file_info-3"},
  {"list_dir", "list_dir(SSH, Path)", "list_dir-2"},
  {"list_dir", "list_dir(SSH, Server, Path)", "list_dir-3"},
  {"make_dir", "make_dir(SSH, Name)", "make_dir-2"},
  {"make_dir", "make_dir(SSH, Server, Name)", "make_dir-3"},
  {"make_symlink", "make_symlink(SSH, Name, Target)", "make_symlink-3"},
  {"make_symlink", "make_symlink(SSH, Server, Name, Target)", "make_symlink-4"},
  {"open", "open(SSH, File, Mode)", "open-3"},
  {"open", "open(SSH, Server, File, Mode)", "open-4"},
  {"opendir", "opendir(SSH, Path)", "opendir-2"},
  {"opendir", "opendir(SSH, Server, Path)", "opendir-3"},
  {"position", "position(SSH, Handle, Location)", "position-3"},
  {"position", "position(SSH, Server, Handle, Location)", "position-4"},
  {"pread", "pread(SSH, Handle, Position, Length)", "pread-4"},
  {"pread", "pread(SSH, Server, Handle, Position, Length)", "pread-5"},
  {"pwrite", "pwrite(SSH, Handle, Position, Data)", "pwrite-4"},
  {"pwrite", "pwrite(SSH, Server, Handle, Position, Data)", "pwrite-5"},
  {"read", "read(SSH, Handle, Len)", "read-3"},
  {"read", "read(SSH, Server, Handle, Len)", "read-4"},
  {"read_file", "read_file(SSH, File)", "read_file-2"},
  {"read_file", "read_file(SSH, Server, File)", "read_file-3"},
  {"read_file_info", "read_file_info(SSH, Name)", "read_file_info-2"},
  {"read_file_info", "read_file_info(SSH, Server, Name)", "read_file_info-3"},
  {"read_link", "read_link(SSH, Name)", "read_link-2"},
  {"read_link", "read_link(SSH, Server, Name)", "read_link-3"},
  {"read_link_info", "read_link_info(SSH, Name)", "read_link_info-2"},
  {"read_link_info", "read_link_info(SSH, Server, Name)", "read_link_info-3"},
  {"receive_response", "receive_response(SSH, ChannelId)", "receive_response-2"},
  {"receive_response", "receive_response(SSH, ChannelId, End)", "receive_response-3"},
  {"receive_response", "receive_response(SSH, ChannelId, End, Timeout)", "receive_response-4"},
  {"rename", "rename(SSH, OldName, NewName)", "rename-3"},
  {"rename", "rename(SSH, Server, OldName, NewName)", "rename-4"},
  {"send", "send(SSH, ChannelId, Data)", "send-3"},
  {"send", "send(SSH, ChannelId, Data, Timeout)", "send-4"},
  {"send", "send(SSH, ChannelId, Type, Data, Timeout)", "send-5"},
  {"send_and_receive", "send_and_receive(SSH, ChannelId, Data)", "send_and_receive-3"},
  {"send_and_receive", "send_and_receive(SSH, ChannelId, Data, End)", "send_and_receive-4"},
  {"send_and_receive", "send_and_receive(SSH, ChannelId, Data, End, Timeout)", "send_and_receive-5"},
  {"send_and_receive", "send_and_receive(SSH, ChannelId, Type, Data, End, Timeout)", "send_and_receive-6"},
  {"session_close", "session_close(SSH, ChannelId)", "session_close-2"},
  {"session_open", "session_open(SSH)", "session_open-1"},
  {"session_open", "session_open(SSH, Timeout)", "session_open-2"},
  {"sftp_connect", "sftp_connect(SSH)", "sftp_connect-1"},
  {"subsystem", "subsystem(SSH, ChannelId, Subsystem)", "subsystem-3"},
  {"subsystem", "subsystem(SSH, ChannelId, Subsystem, Timeout)", "subsystem-4"},
  {"write", "write(SSH, Handle, Data)", "write-3"},
  {"write", "write(SSH, Server, Handle, Data)", "write-4"},
  {"write_file", "write_file(SSH, File, Iolist)", "write_file-3"},
  {"write_file", "write_file(SSH, Server, File, Iolist)", "write_file-4"},
  {"write_file_info", "write_file_info(SSH, Name, Info)", "write_file_info-3"},
  {"write_file_info", "write_file_info(SSH, Server, Name, Info)", "write_file_info-4"}
]}.
{"ct_ssh.html", {module, "common_test"}, ["ct_ssh"]}.
{"ct_netconfc.html", {function, {"common_test", "ct_netconfc"}},
[
  {"action", "action(Client, Action)", "action-2"},
  {"action", "action(Client, Action, Timeout)", "action-3"},
  {"close_session", "close_session(Client)", "close_session-1"},
  {"close_session", "close_session(Client, Timeout)", "close_session-2"},
  {"copy_config", "copy_config(Client, Source, Target)", "copy_config-3"},
  {"copy_config", "copy_config(Client, Target, Source, Timeout)", "copy_config-4"},
  {"create_subscription", "create_subscription(Client)", "create_subscription-1"},
  {"create_subscription", "create_subscription(Client, Timeout)", "create_subscription-2"},
  {"create_subscription", "create_subscription(Client, Stream, Timeout)", "create_subscription-3"},
  {"create_subscription", "create_subscription(Client, StartTime, StopTime, Timeout)", "create_subscription-4"},
  {"create_subscription", "create_subscription(Client, Stream, StartTime, StopTime, Timeout)", "create_subscription-5"},
  {"create_subscription", "create_subscription(Client, Stream, Filter, StartTime, StopTime, Timeout)", "create_subscription-6"},
  {"delete_config", "delete_config(Client, Target)", "delete_config-2"},
  {"delete_config", "delete_config(Client, Target, Timeout)", "delete_config-3"},
  {"edit_config", "edit_config(Client, Target, Config)", "edit_config-3"},
  {"edit_config", "edit_config(Client, Target, Config, OptParamsOrTimeout)", "edit_config-4"},
  {"edit_config", "edit_config(Client, Target, Config, OptParams, Timeout)", "edit_config-5"},
  {"get", "get(Client, Filter)", "get-2"},
  {"get", "get(Client, Filter, Timeout)", "get-3"},
  {"get_capabilities", "get_capabilities(Client)", "get_capabilities-1"},
  {"get_capabilities", "get_capabilities(Client, Timeout)", "get_capabilities-2"},
  {"get_config", "get_config(Client, Source, Filter)", "get_config-3"},
  {"get_config", "get_config(Client, Source, Filter, Timeout)", "get_config-4"},
  {"get_event_streams", "get_event_streams(Client, Timeout)", "get_event_streams-2"},
  {"get_event_streams", "get_event_streams(Client, Streams, Timeout)", "get_event_streams-3"},
  {"get_session_id", "get_session_id(Client)", "get_session_id-1"},
  {"get_session_id", "get_session_id(Client, Timeout)", "get_session_id-2"},
  {"hello", "hello(Client)", "hello-1"},
  {"hello", "hello(Client, Timeout)", "hello-2"},
  {"hello", "hello(Client, Options, Timeout)", "hello-3"},
  {"kill_session", "kill_session(Client, SessionId)", "kill_session-2"},
  {"kill_session", "kill_session(Client, SessionId, Timeout)", "kill_session-3"},
  {"lock", "lock(Client, Target)", "lock-2"},
  {"lock", "lock(Client, Target, Timeout)", "lock-3"},
  {"only_open", "only_open(Options)", "only_open-1"},
  {"only_open", "only_open(KeyOrName, ExtraOptions)", "only_open-2"},
  {"open", "open(Options)", "open-1"},
  {"open", "open(KeyOrName, ExtraOptions)", "open-2"},
  {"send", "send(Client, SimpleXml)", "send-2"},
  {"send", "send(Client, SimpleXml, Timeout)", "send-3"},
  {"send_rpc", "send_rpc(Client, SimpleXml)", "send_rpc-2"},
  {"send_rpc", "send_rpc(Client, SimpleXml, Timeout)", "send_rpc-3"},
  {"unlock", "unlock(Client, Target)", "unlock-2"},
  {"unlock", "unlock(Client, Target, Timeout)", "unlock-3"}
]}.
{"ct_netconfc.html", {module, "common_test"}, ["ct_netconfc"]}.
{"ct_rpc.html", {function, {"common_test", "ct_rpc"}},
[
  {"app_node", "app_node(App, Candidates)", "app_node-2"},
  {"app_node", "app_node(App, Candidates, FailOnBadRPC)", "app_node-3"},
  {"app_node", "app_node(App, Candidates, FailOnBadRPC, Cookie)", "app_node-4"},
  {"call", "call(Node, Module, Function, Args)", "call-4"},
  {"call", "call(Node, Module, Function, Args, TimeOut)", "call-5"},
  {"call", "call(Node, Module, Function, Args, TimeOut, Cookie)", "call-6"},
  {"cast", "cast(Node, Module, Function, Args)", "cast-4"},
  {"cast", "cast(Node, Module, Function, Args, Cookie)", "cast-5"}
]}.
{"ct_rpc.html", {module, "common_test"}, ["ct_rpc"]}.
{"ct_snmp.html", {function, {"common_test", "ct_snmp"}},
[
  {"get_next_values", "get_next_values(Agent, Oids, MgrAgentConfName)", "get_next_values-3"},
  {"get_values", "get_values(Agent, Oids, MgrAgentConfName)", "get_values-3"},
  {"load_mibs", "load_mibs(Mibs)", "load_mibs-1"},
  {"register_agents", "register_agents(MgrAgentConfName, ManagedAgents)", "register_agents-2"},
  {"register_users", "register_users(MgrAgentConfName, Users)", "register_users-2"},
  {"register_usm_users", "register_usm_users(MgrAgentConfName, UsmUsers)", "register_usm_users-2"},
  {"set_info", "set_info(Config)", "set_info-1"},
  {"set_values", "set_values(Agent, VarsAndVals, MgrAgentConfName, Config)", "set_values-4"},
  {"start", "start(Config, MgrAgentConfName)", "start-2"},
  {"start", "start(Config, MgrAgentConfName, SnmpAppConfName)", "start-3"},
  {"stop", "stop(Config)", "stop-1"},
  {"unload_mibs", "unload_mibs(Mibs)", "unload_mibs-1"},
  {"unregister_agents", "unregister_agents(MgrAgentConfName)", "unregister_agents-1"},
  {"unregister_agents", "unregister_agents(MgrAgentConfName, ManagedAgents)", "unregister_agents-2"},
  {"unregister_users", "unregister_users(MgrAgentConfName)", "unregister_users-1"},
  {"unregister_users", "unregister_users(MgrAgentConfName, Users)", "unregister_users-2"},
  {"unregister_usm_users", "unregister_usm_users(MgrAgentConfName)", "unregister_usm_users-1"},
  {"unregister_usm_users", "unregister_usm_users(MgrAgentConfName, UsmUsers)", "unregister_usm_users-2"}
]}.
{"ct_snmp.html", {module, "common_test"}, ["ct_snmp"]}.
{"ct_telnet.html", {function, {"common_test", "ct_telnet"}},
[
  {"close", "close(Connection)", "close-1"},
  {"cmd", "cmd(Connection, Cmd)", "cmd-2"},
  {"cmd", "cmd(Connection, Cmd, Opts)", "cmd-3"},
  {"cmdf", "cmdf(Connection, CmdFormat, Args)", "cmdf-3"},
  {"cmdf", "cmdf(Connection, CmdFormat, Args, Opts)", "cmdf-4"},
  {"expect", "expect(Connection, Patterns)", "expect-2"},
  {"expect", "expect(Connection, Patterns, Opts)", "expect-3"},
  {"get_data", "get_data(Connection)", "get_data-1"},
  {"open", "open(Name)", "open-1"},
  {"open", "open(Name, ConnType)", "open-2"},
  {"open", "open(KeyOrName, ConnType, TargetMod)", "open-3"},
  {"open", "open(KeyOrName, ConnType, TargetMod, Extra)", "open-4"},
  {"send", "send(Connection, Cmd)", "send-2"},
  {"send", "send(Connection, Cmd, Opts)", "send-3"},
  {"sendf", "sendf(Connection, CmdFormat, Args)", "sendf-3"},
  {"sendf", "sendf(Connection, CmdFormat, Args, Opts)", "sendf-4"}
]}.
{"ct_telnet.html", {module, "common_test"}, ["ct_telnet"]}.
{"unix_telnet.html", {function, {"common_test", "unix_telnet"}},
[
  {"connect", "connect(ConnName, Ip, Port, Timeout, KeepAlive, Extra)", "connect-6"},
  {"get_prompt_regexp", "get_prompt_regexp()", "get_prompt_regexp-0"}
]}.
{"unix_telnet.html", {module, "common_test"}, ["unix_telnet"]}.
{"ct_slave.html", {function, {"common_test", "ct_slave"}},
[
  {"start", "start(Node)", "start-1"},
  {"start", "start(HostOrNode, NodeOrOpts)", "start-2"},
  {"start", "start(Host, Node, Opts)", "start-3"},
  {"stop", "stop(Node)", "stop-1"},
  {"stop", "stop(Host, Node)", "stop-2"}
]}.
{"ct_slave.html", {module, "common_test"}, ["ct_slave"]}.
{"ct_hooks.html", {function, {"common_test", "ct_hooks"}},
[
  {"Module:init", "Module:init(Id, Opts)", "Module:init-2"},
  {"Module:pre_init_per_suite", "Module:pre_init_per_suite(SuiteName, InitData, CTHState)", "Module:pre_init_per_suite-3"},
  {"Module:post_init_per_suite", "Module:post_init_per_suite(SuiteName, Config, Return, CTHState)", "Module:post_init_per_suite-4"},
  {"Module:pre_init_per_group", "Module:pre_init_per_group(GroupName, InitData, CTHState)", "Module:pre_init_per_group-3"},
  {"Module:post_init_per_group", "Module:post_init_per_group(GroupName, Config, Return, CTHState)", "Module:post_init_per_group-4"},
  {"Module:pre_init_per_testcase", "Module:pre_init_per_testcase(TestcaseName, InitData, CTHState)", "Module:pre_init_per_testcase-3"},
  {"Module:post_init_per_testcase", "Module:post_init_per_testcase(TestcaseName, Config, Return, CTHState)", "Module:post_init_per_testcase-4"},
  {"Module:pre_end_per_testcase", "Module:pre_end_per_testcase(TestcaseName, InitData, CTHState)", "Module:pre_end_per_testcase-3"},
  {"Module:post_end_per_testcase", "Module:post_end_per_testcase(TestcaseName, Config, Return, CTHState)", "Module:post_end_per_testcase-4"},
  {"Module:pre_end_per_group", "Module:pre_end_per_group(GroupName, EndData, CTHState)", "Module:pre_end_per_group-3"},
  {"Module:post_end_per_group", "Module:post_end_per_group(GroupName, Config, Return, CTHState)", "Module:post_end_per_group-4"},
  {"Module:pre_end_per_suite", "Module:pre_end_per_suite(SuiteName, EndData, CTHState)", "Module:pre_end_per_suite-3"},
  {"Module:post_end_per_suite", "Module:post_end_per_suite(SuiteName, Config, Return, CTHState)", "Module:post_end_per_suite-4"},
  {"Module:on_tc_fail", "Module:on_tc_fail(TestName, Reason, CTHState)", "Module:on_tc_fail-3"},
  {"Module:on_tc_skip", "Module:on_tc_skip(TestName, Reason, CTHState)", "Module:on_tc_skip-3"},
  {"Module:terminate", "Module:terminate(", "Module:terminate-1"},
  {"Module:id", "Module:id(Opts)", "Module:id-1"}
]}.
{"ct_hooks.html", {module, "common_test"}, ["ct_hooks"]}.
{"ct_property_test.html", {function, {"common_test", "ct_property_test"}},
[
  {"init_per_suite", "init_per_suite(Config)", "init_per_suite-1"},
  {"quickcheck", "quickcheck(Property, Config)", "quickcheck-2"}
]}.
{"ct_property_test.html", {module, "common_test"}, ["ct_property_test"]}.
{notused, application, ["common_test"]}.
