%% 
%% Search data file for mnesia 4.15.6
%% generated May 31, 2021
%% 
{"mnesia.html", {function, {"mnesia", "mnesia"}},
[
  {"abort", "abort(Reason)", "abort-1"},
  {"activate_checkpoint", "activate_checkpoint(Args)", "activate_checkpoint-1"},
  {"activity", "activity(AccessContext, Fun [, Args])", "activity-2"},
  {"activity", "activity(AccessContext, Fun, Args, AccessMod)", "activity-4"},
  {"add_table_copy", "add_table_copy(Tab, Node, Type)", "add_table_copy-3"},
  {"add_table_index", "add_table_index(Tab, AttrName)", "add_table_index-2"},
  {"all_keys", "all_keys(Tab)", "all_keys-1"},
  {"async_dirty", "async_dirty(Fun, [, Args])", "async_dirty-2"},
  {"backup", "backup(Opaque [, BackupMod])", "backup-1"},
  {"backup_checkpoint", "backup_checkpoint(Name, Opaque [, BackupMod])", "backup_checkpoint-2"},
  {"change_config", "change_config(Config, Value)", "change_config-2"},
  {"change_table_access_mode", "change_table_access_mode(Tab, AccessMode)", "change_table_access_mode-2"},
  {"change_table_copy_type", "change_table_copy_type(Tab, Node, To)", "change_table_copy_type-3"},
  {"change_table_load_order", "change_table_load_order(Tab, LoadOrder)", "change_table_load_order-2"},
  {"change_table_majority", "change_table_majority(Tab, Majority)", "change_table_majority-2"},
  {"clear_table", "clear_table(Tab)", "clear_table-1"},
  {"create_schema", "create_schema(DiscNodes)", "create_schema-1"},
  {"create_table", "create_table(Name, TabDef)", "create_table-2"},
  {"deactivate_checkpoint", "deactivate_checkpoint(Name)", "deactivate_checkpoint-1"},
  {"del_table_copy", "del_table_copy(Tab, Node)", "del_table_copy-2"},
  {"del_table_index", "del_table_index(Tab, AttrName)", "del_table_index-2"},
  {"delete", "delete({Tab, Key})", "delete-1"},
  {"delete", "delete(Tab, Key, LockKind)", "delete-3"},
  {"delete_object", "delete_object(Record)", "delete_object-1"},
  {"delete_object", "delete_object(Tab, Record, LockKind)", "delete_object-3"},
  {"delete_schema", "delete_schema(DiscNodes)", "delete_schema-1"},
  {"delete_table", "delete_table(Tab)", "delete_table-1"},
  {"dirty_all_keys", "dirty_all_keys(Tab)", "dirty_all_keys-1"},
  {"dirty_delete", "dirty_delete({Tab, Key})", "dirty_delete-1"},
  {"dirty_delete", "dirty_delete(Tab, Key)", "dirty_delete-2"},
  {"dirty_delete_object", "dirty_delete_object(Record)", "dirty_delete_object"},
  {"dirty_delete_object", "dirty_delete_object(Tab, Record)", "dirty_delete_object"},
  {"dirty_first", "dirty_first(Tab)", "dirty_first-1"},
  {"dirty_index_match_object", "dirty_index_match_object(Pattern, Pos)", "dirty_index_match_object"},
  {"dirty_index_match_object", "dirty_index_match_object(Tab, Pattern, Pos)", "dirty_index_match_object"},
  {"dirty_index_read", "dirty_index_read(Tab, SecondaryKey, Pos)", "dirty_index_read"},
  {"dirty_last", "dirty_last(Tab)", "dirty_last-1"},
  {"dirty_match_object", "dirty_match_object(Pattern)", "dirty_match_object-1"},
  {"dirty_match_object", "dirty_match_object(Tab, Pattern)", "dirty_match_object-2"},
  {"dirty_next", "dirty_next(Tab, Key)", "dirty_next-2"},
  {"dirty_prev", "dirty_prev(Tab, Key)", "dirty_prev-2"},
  {"dirty_read", "dirty_read({Tab, Key})", "dirty_read-1"},
  {"dirty_read", "dirty_read(Tab, Key)", "dirty_read-2"},
  {"dirty_select", "dirty_select(Tab, MatchSpec)", "dirty_select-2"},
  {"dirty_slot", "dirty_slot(Tab, Slot)", "dirty_slot-2"},
  {"dirty_update_counter", "dirty_update_counter({Tab, Key}, Incr)", "dirty_update_counter-2"},
  {"dirty_update_counter", "dirty_update_counter(Tab, Key, Incr)", "dirty_update_counter-3"},
  {"dirty_write", "dirty_write(Record)", "dirty_write-1"},
  {"dirty_write", "dirty_write(Tab, Record)", "dirty_write-2"},
  {"dump_log", "dump_log()", "dump_log-0"},
  {"dump_tables", "dump_tables(TabList)", "dump_tables-1"},
  {"dump_to_textfile", "dump_to_textfile(Filename)", "dump_to_textfile"},
  {"error_description", "error_description(Error)", "error_description-1"},
  {"ets", "ets(Fun, [, Args])", "ets-2"},
  {"first", "first(Tab)", "first-1"},
  {"foldl", "foldl(Function, Acc, Table)", "foldl-3"},
  {"foldr", "foldr(Function, Acc, Table)", "foldr-3"},
  {"force_load_table", "force_load_table(Tab)", "force_load_table-1"},
  {"index_match_object", "index_match_object(Pattern, Pos)", "index_match_object-2"},
  {"index_match_object", "index_match_object(Tab, Pattern, Pos, LockKind)", "index_match_object-4"},
  {"index_read", "index_read(Tab, SecondaryKey, Pos)", "index_read-3"},
  {"info", "info()", "info-0"},
  {"install_fallback", "install_fallback(Opaque)", "install_fallback-1"},
  {"install_fallback", "install_fallback(Opaque), BackupMod)", "install_fallback-1"},
  {"install_fallback", "install_fallback(Opaque, Args)", "install_fallback-2"},
  {"is_transaction", "is_transaction()", "is_transaction-0"},
  {"last", "last(Tab)", "last-1"},
  {"load_textfile", "load_textfile(Filename)", "load_textfile"},
  {"lock", "lock(LockItem, LockKind)", "lock-2"},
  {"match_object", "match_object(Pattern)", "match_object-1"},
  {"match_object", "match_object(Tab, Pattern, LockKind)", "match_object-3"},
  {"move_table_copy", "move_table_copy(Tab, From, To)", "move_table_copy-3"},
  {"next", "next(Tab, Key)", "next-2"},
  {"prev", "prev(Tab, Key)", "prev-2"},
  {"read", "read({Tab, Key})", "read-1"},
  {"read", "read(Tab, Key)", "read-2"},
  {"read", "read(Tab, Key, LockKind)", "read-3"},
  {"read_lock_table", "read_lock_table(Tab)", "read_lock_table-1"},
  {"report_event", "report_event(Event)", "report_event-1"},
  {"restore", "restore(Opaque, Args)", "restore-2"},
  {"s_delete", "s_delete({Tab, Key})", "s_delete-1"},
  {"s_delete_object", "s_delete_object(Record)", "s_delete_object-1"},
  {"s_write", "s_write(Record)", "s_write-1"},
  {"schema", "schema()", "schema-0"},
  {"schema", "schema(Tab)", "schema-1"},
  {"select", "select(Tab, MatchSpec [, Lock])", "select-2"},
  {"select", "select(Tab, MatchSpec, NObjects, Lock)", "select-4"},
  {"select", "select(Cont)", "select-1"},
  {"set_debug_level", "set_debug_level(Level)", "set_debug_level-1"},
  {"set_master_nodes", "set_master_nodes(MasterNodes)", "set_master_nodes-1"},
  {"set_master_nodes", "set_master_nodes(Tab, MasterNodes)", "set_master_nodes-2"},
  {"snmp_close_table", "snmp_close_table(Tab)", "snmp_close_table-1"},
  {"snmp_get_mnesia_key", "snmp_get_mnesia_key(Tab, RowIndex)", "snmp_get_mnesia_key-2"},
  {"snmp_get_next_index", "snmp_get_next_index(Tab, RowIndex)", "snmp_get_next_index-2"},
  {"snmp_get_row", "snmp_get_row(Tab, RowIndex)", "snmp_get_row-2"},
  {"snmp_open_table", "snmp_open_table(Tab, SnmpStruct)", "snmp_open_table-2"},
  {"start", "start()", "start-0"},
  {"stop", "stop()", "stop-0"},
  {"subscribe", "subscribe(EventCategory)", "subscribe-1"},
  {"sync_dirty", "sync_dirty(Fun, [, Args])", "sync_dirty-2"},
  {"sync_log", "sync_log()", "sync_log-0"},
  {"sync_transaction", "sync_transaction(Fun, [[, Args], Retries])", "sync_transaction-3"},
  {"system_info", "system_info(InfoKey)", "system_info-1"},
  {"table", "table(Tab [,[Option]])", "table-1"},
  {"table_info", "table_info(Tab, InfoKey)", "table_info-2"},
  {"transaction", "transaction(Fun [[, Args], Retries])", "transaction-2"},
  {"transform_table", "transform_table(Tab, Fun, NewAttributeList, NewRecordName)", "transform_table-4"},
  {"transform_table", "transform_table(Tab, Fun, NewAttributeList)", "transform_table-3"},
  {"traverse_backup", "traverse_backup(Source, [SourceMod,] Target, [TargetMod,] Fun, Acc)", "traverse_backup-4"},
  {"uninstall_fallback", "uninstall_fallback()", "uninstall_fallback-0"},
  {"uninstall_fallback", "uninstall_fallback(Args)", "uninstall_fallback-1"},
  {"unsubscribe", "unsubscribe(EventCategory)", "unsubscribe-1"},
  {"wait_for_tables", "wait_for_tables(TabList, Timeout)", "wait_for_tables-2"},
  {"wread", "wread({Tab, Key})", "wread-1"},
  {"write", "write(Record)", "write-1"},
  {"write", "write(Tab, Record, LockKind)", "write-3"},
  {"write_lock_table", "write_lock_table(Tab)", "write_lock_table-1"}
]}.
{"mnesia.html", {module, "mnesia"}, ["mnesia"]}.
{"mnesia_frag_hash.html", {function, {"mnesia", "mnesia_frag_hash"}},
[
  {"init_state", "init_state(Tab, State)", "init_state-2"},
  {"add_frag", "add_frag(State)", "add_frag-1"},
  {"del_frag", "del_frag(State)", "del_frag-1"},
  {"key_to_frag_number", "key_to_frag_number(State, Key)", "key_to_frag_number-2"},
  {"match_spec_to_frag_numbers", "match_spec_to_frag_numbers(State, MatchSpec)", "match_spec_to_frag_numbers-2"}
]}.
{"mnesia_frag_hash.html", {module, "mnesia"}, ["mnesia_frag_hash"]}.
{"mnesia_registry.html", {function, {"mnesia", "mnesia_registry"}},
[
  {"create_table", "create_table(Tab)", "create_table-1"},
  {"create_table", "create_table(Tab, TabDef)", "create_table-2"}
]}.
{"mnesia_registry.html", {module, "mnesia"}, ["mnesia_registry"]}.
{notused, application, ["mnesia"]}.
